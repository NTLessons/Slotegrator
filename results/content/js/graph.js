/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 77.0, "minX": 0.0, "maxY": 75002.0, "series": [{"data": [[0.0, 81.0], [0.1, 81.0], [0.2, 81.0], [0.3, 81.0], [0.4, 81.0], [0.5, 81.0], [0.6, 81.0], [0.7, 81.0], [0.8, 81.0], [0.9, 81.0], [1.0, 81.0], [1.1, 81.0], [1.2, 81.0], [1.3, 81.0], [1.4, 81.0], [1.5, 82.0], [1.6, 82.0], [1.7, 82.0], [1.8, 82.0], [1.9, 82.0], [2.0, 82.0], [2.1, 82.0], [2.2, 82.0], [2.3, 82.0], [2.4, 82.0], [2.5, 82.0], [2.6, 82.0], [2.7, 82.0], [2.8, 82.0], [2.9, 82.0], [3.0, 82.0], [3.1, 82.0], [3.2, 82.0], [3.3, 82.0], [3.4, 82.0], [3.5, 82.0], [3.6, 82.0], [3.7, 82.0], [3.8, 82.0], [3.9, 82.0], [4.0, 82.0], [4.1, 82.0], [4.2, 82.0], [4.3, 82.0], [4.4, 82.0], [4.5, 82.0], [4.6, 82.0], [4.7, 82.0], [4.8, 82.0], [4.9, 82.0], [5.0, 82.0], [5.1, 82.0], [5.2, 82.0], [5.3, 82.0], [5.4, 82.0], [5.5, 82.0], [5.6, 82.0], [5.7, 82.0], [5.8, 82.0], [5.9, 82.0], [6.0, 82.0], [6.1, 82.0], [6.2, 82.0], [6.3, 82.0], [6.4, 82.0], [6.5, 82.0], [6.6, 82.0], [6.7, 82.0], [6.8, 82.0], [6.9, 83.0], [7.0, 83.0], [7.1, 83.0], [7.2, 83.0], [7.3, 83.0], [7.4, 83.0], [7.5, 83.0], [7.6, 83.0], [7.7, 83.0], [7.8, 83.0], [7.9, 83.0], [8.0, 83.0], [8.1, 83.0], [8.2, 83.0], [8.3, 83.0], [8.4, 83.0], [8.5, 83.0], [8.6, 83.0], [8.7, 83.0], [8.8, 83.0], [8.9, 83.0], [9.0, 83.0], [9.1, 83.0], [9.2, 83.0], [9.3, 83.0], [9.4, 83.0], [9.5, 83.0], [9.6, 83.0], [9.7, 83.0], [9.8, 83.0], [9.9, 83.0], [10.0, 83.0], [10.1, 83.0], [10.2, 83.0], [10.3, 83.0], [10.4, 83.0], [10.5, 83.0], [10.6, 83.0], [10.7, 83.0], [10.8, 83.0], [10.9, 83.0], [11.0, 83.0], [11.1, 83.0], [11.2, 83.0], [11.3, 83.0], [11.4, 83.0], [11.5, 83.0], [11.6, 83.0], [11.7, 83.0], [11.8, 83.0], [11.9, 83.0], [12.0, 83.0], [12.1, 83.0], [12.2, 83.0], [12.3, 83.0], [12.4, 83.0], [12.5, 83.0], [12.6, 83.0], [12.7, 83.0], [12.8, 83.0], [12.9, 83.0], [13.0, 83.0], [13.1, 83.0], [13.2, 83.0], [13.3, 83.0], [13.4, 83.0], [13.5, 83.0], [13.6, 83.0], [13.7, 83.0], [13.8, 83.0], [13.9, 83.0], [14.0, 83.0], [14.1, 83.0], [14.2, 83.0], [14.3, 83.0], [14.4, 83.0], [14.5, 83.0], [14.6, 83.0], [14.7, 83.0], [14.8, 83.0], [14.9, 83.0], [15.0, 83.0], [15.1, 83.0], [15.2, 83.0], [15.3, 83.0], [15.4, 83.0], [15.5, 83.0], [15.6, 83.0], [15.7, 83.0], [15.8, 83.0], [15.9, 83.0], [16.0, 83.0], [16.1, 83.0], [16.2, 84.0], [16.3, 84.0], [16.4, 84.0], [16.5, 84.0], [16.6, 84.0], [16.7, 84.0], [16.8, 84.0], [16.9, 84.0], [17.0, 84.0], [17.1, 84.0], [17.2, 84.0], [17.3, 84.0], [17.4, 84.0], [17.5, 84.0], [17.6, 84.0], [17.7, 84.0], [17.8, 84.0], [17.9, 84.0], [18.0, 84.0], [18.1, 84.0], [18.2, 84.0], [18.3, 84.0], [18.4, 84.0], [18.5, 84.0], [18.6, 84.0], [18.7, 84.0], [18.8, 84.0], [18.9, 84.0], [19.0, 84.0], [19.1, 84.0], [19.2, 84.0], [19.3, 84.0], [19.4, 84.0], [19.5, 84.0], [19.6, 84.0], [19.7, 84.0], [19.8, 84.0], [19.9, 84.0], [20.0, 84.0], [20.1, 84.0], [20.2, 84.0], [20.3, 84.0], [20.4, 84.0], [20.5, 84.0], [20.6, 84.0], [20.7, 84.0], [20.8, 84.0], [20.9, 84.0], [21.0, 84.0], [21.1, 84.0], [21.2, 84.0], [21.3, 84.0], [21.4, 84.0], [21.5, 84.0], [21.6, 84.0], [21.7, 84.0], [21.8, 84.0], [21.9, 84.0], [22.0, 84.0], [22.1, 84.0], [22.2, 84.0], [22.3, 84.0], [22.4, 84.0], [22.5, 84.0], [22.6, 84.0], [22.7, 84.0], [22.8, 84.0], [22.9, 84.0], [23.0, 84.0], [23.1, 84.0], [23.2, 84.0], [23.3, 84.0], [23.4, 84.0], [23.5, 84.0], [23.6, 84.0], [23.7, 84.0], [23.8, 84.0], [23.9, 84.0], [24.0, 84.0], [24.1, 84.0], [24.2, 84.0], [24.3, 84.0], [24.4, 84.0], [24.5, 84.0], [24.6, 84.0], [24.7, 84.0], [24.8, 84.0], [24.9, 84.0], [25.0, 84.0], [25.1, 84.0], [25.2, 84.0], [25.3, 84.0], [25.4, 84.0], [25.5, 84.0], [25.6, 84.0], [25.7, 84.0], [25.8, 84.0], [25.9, 84.0], [26.0, 84.0], [26.1, 84.0], [26.2, 84.0], [26.3, 84.0], [26.4, 84.0], [26.5, 84.0], [26.6, 84.0], [26.7, 84.0], [26.8, 84.0], [26.9, 84.0], [27.0, 84.0], [27.1, 84.0], [27.2, 84.0], [27.3, 84.0], [27.4, 84.0], [27.5, 84.0], [27.6, 84.0], [27.7, 84.0], [27.8, 84.0], [27.9, 84.0], [28.0, 84.0], [28.1, 84.0], [28.2, 84.0], [28.3, 84.0], [28.4, 84.0], [28.5, 84.0], [28.6, 85.0], [28.7, 85.0], [28.8, 85.0], [28.9, 85.0], [29.0, 85.0], [29.1, 85.0], [29.2, 85.0], [29.3, 85.0], [29.4, 85.0], [29.5, 85.0], [29.6, 85.0], [29.7, 85.0], [29.8, 85.0], [29.9, 85.0], [30.0, 85.0], [30.1, 85.0], [30.2, 85.0], [30.3, 85.0], [30.4, 85.0], [30.5, 85.0], [30.6, 85.0], [30.7, 85.0], [30.8, 85.0], [30.9, 85.0], [31.0, 85.0], [31.1, 85.0], [31.2, 85.0], [31.3, 85.0], [31.4, 85.0], [31.5, 85.0], [31.6, 85.0], [31.7, 85.0], [31.8, 85.0], [31.9, 85.0], [32.0, 85.0], [32.1, 85.0], [32.2, 85.0], [32.3, 85.0], [32.4, 85.0], [32.5, 85.0], [32.6, 85.0], [32.7, 85.0], [32.8, 85.0], [32.9, 85.0], [33.0, 85.0], [33.1, 85.0], [33.2, 85.0], [33.3, 85.0], [33.4, 85.0], [33.5, 85.0], [33.6, 85.0], [33.7, 85.0], [33.8, 85.0], [33.9, 85.0], [34.0, 85.0], [34.1, 85.0], [34.2, 85.0], [34.3, 85.0], [34.4, 85.0], [34.5, 85.0], [34.6, 85.0], [34.7, 85.0], [34.8, 85.0], [34.9, 85.0], [35.0, 85.0], [35.1, 85.0], [35.2, 85.0], [35.3, 85.0], [35.4, 85.0], [35.5, 85.0], [35.6, 85.0], [35.7, 85.0], [35.8, 85.0], [35.9, 85.0], [36.0, 85.0], [36.1, 85.0], [36.2, 85.0], [36.3, 85.0], [36.4, 85.0], [36.5, 85.0], [36.6, 85.0], [36.7, 85.0], [36.8, 85.0], [36.9, 85.0], [37.0, 85.0], [37.1, 85.0], [37.2, 85.0], [37.3, 85.0], [37.4, 85.0], [37.5, 85.0], [37.6, 85.0], [37.7, 85.0], [37.8, 85.0], [37.9, 85.0], [38.0, 85.0], [38.1, 85.0], [38.2, 85.0], [38.3, 85.0], [38.4, 85.0], [38.5, 85.0], [38.6, 85.0], [38.7, 85.0], [38.8, 85.0], [38.9, 85.0], [39.0, 85.0], [39.1, 85.0], [39.2, 85.0], [39.3, 85.0], [39.4, 85.0], [39.5, 85.0], [39.6, 85.0], [39.7, 85.0], [39.8, 85.0], [39.9, 85.0], [40.0, 85.0], [40.1, 85.0], [40.2, 85.0], [40.3, 85.0], [40.4, 85.0], [40.5, 85.0], [40.6, 85.0], [40.7, 85.0], [40.8, 85.0], [40.9, 85.0], [41.0, 85.0], [41.1, 85.0], [41.2, 85.0], [41.3, 85.0], [41.4, 85.0], [41.5, 85.0], [41.6, 85.0], [41.7, 85.0], [41.8, 85.0], [41.9, 85.0], [42.0, 85.0], [42.1, 85.0], [42.2, 85.0], [42.3, 86.0], [42.4, 86.0], [42.5, 86.0], [42.6, 86.0], [42.7, 86.0], [42.8, 86.0], [42.9, 86.0], [43.0, 86.0], [43.1, 86.0], [43.2, 86.0], [43.3, 86.0], [43.4, 86.0], [43.5, 86.0], [43.6, 86.0], [43.7, 86.0], [43.8, 86.0], [43.9, 86.0], [44.0, 86.0], [44.1, 86.0], [44.2, 86.0], [44.3, 86.0], [44.4, 86.0], [44.5, 86.0], [44.6, 86.0], [44.7, 86.0], [44.8, 86.0], [44.9, 86.0], [45.0, 86.0], [45.1, 86.0], [45.2, 86.0], [45.3, 86.0], [45.4, 86.0], [45.5, 86.0], [45.6, 86.0], [45.7, 86.0], [45.8, 86.0], [45.9, 86.0], [46.0, 86.0], [46.1, 86.0], [46.2, 86.0], [46.3, 86.0], [46.4, 86.0], [46.5, 86.0], [46.6, 86.0], [46.7, 86.0], [46.8, 86.0], [46.9, 86.0], [47.0, 86.0], [47.1, 86.0], [47.2, 86.0], [47.3, 86.0], [47.4, 86.0], [47.5, 86.0], [47.6, 86.0], [47.7, 86.0], [47.8, 86.0], [47.9, 86.0], [48.0, 86.0], [48.1, 86.0], [48.2, 86.0], [48.3, 86.0], [48.4, 86.0], [48.5, 86.0], [48.6, 87.0], [48.7, 87.0], [48.8, 87.0], [48.9, 87.0], [49.0, 87.0], [49.1, 87.0], [49.2, 87.0], [49.3, 87.0], [49.4, 87.0], [49.5, 87.0], [49.6, 87.0], [49.7, 87.0], [49.8, 87.0], [49.9, 87.0], [50.0, 87.0], [50.1, 87.0], [50.2, 87.0], [50.3, 87.0], [50.4, 87.0], [50.5, 87.0], [50.6, 87.0], [50.7, 87.0], [50.8, 87.0], [50.9, 87.0], [51.0, 87.0], [51.1, 87.0], [51.2, 87.0], [51.3, 87.0], [51.4, 87.0], [51.5, 87.0], [51.6, 87.0], [51.7, 87.0], [51.8, 87.0], [51.9, 87.0], [52.0, 87.0], [52.1, 87.0], [52.2, 87.0], [52.3, 87.0], [52.4, 87.0], [52.5, 87.0], [52.6, 87.0], [52.7, 87.0], [52.8, 87.0], [52.9, 87.0], [53.0, 87.0], [53.1, 87.0], [53.2, 87.0], [53.3, 87.0], [53.4, 87.0], [53.5, 87.0], [53.6, 87.0], [53.7, 87.0], [53.8, 87.0], [53.9, 87.0], [54.0, 87.0], [54.1, 87.0], [54.2, 87.0], [54.3, 87.0], [54.4, 87.0], [54.5, 87.0], [54.6, 87.0], [54.7, 87.0], [54.8, 87.0], [54.9, 87.0], [55.0, 87.0], [55.1, 87.0], [55.2, 87.0], [55.3, 88.0], [55.4, 88.0], [55.5, 88.0], [55.6, 88.0], [55.7, 88.0], [55.8, 88.0], [55.9, 88.0], [56.0, 88.0], [56.1, 88.0], [56.2, 88.0], [56.3, 88.0], [56.4, 88.0], [56.5, 88.0], [56.6, 88.0], [56.7, 88.0], [56.8, 88.0], [56.9, 88.0], [57.0, 88.0], [57.1, 88.0], [57.2, 88.0], [57.3, 88.0], [57.4, 88.0], [57.5, 88.0], [57.6, 88.0], [57.7, 88.0], [57.8, 88.0], [57.9, 88.0], [58.0, 88.0], [58.1, 88.0], [58.2, 88.0], [58.3, 88.0], [58.4, 88.0], [58.5, 88.0], [58.6, 88.0], [58.7, 88.0], [58.8, 88.0], [58.9, 88.0], [59.0, 88.0], [59.1, 88.0], [59.2, 88.0], [59.3, 88.0], [59.4, 88.0], [59.5, 88.0], [59.6, 88.0], [59.7, 88.0], [59.8, 88.0], [59.9, 88.0], [60.0, 88.0], [60.1, 88.0], [60.2, 88.0], [60.3, 88.0], [60.4, 88.0], [60.5, 88.0], [60.6, 88.0], [60.7, 88.0], [60.8, 88.0], [60.9, 88.0], [61.0, 88.0], [61.1, 88.0], [61.2, 88.0], [61.3, 88.0], [61.4, 88.0], [61.5, 88.0], [61.6, 88.0], [61.7, 88.0], [61.8, 88.0], [61.9, 88.0], [62.0, 88.0], [62.1, 88.0], [62.2, 88.0], [62.3, 88.0], [62.4, 88.0], [62.5, 88.0], [62.6, 88.0], [62.7, 88.0], [62.8, 88.0], [62.9, 88.0], [63.0, 88.0], [63.1, 88.0], [63.2, 88.0], [63.3, 88.0], [63.4, 88.0], [63.5, 88.0], [63.6, 88.0], [63.7, 88.0], [63.8, 89.0], [63.9, 89.0], [64.0, 89.0], [64.1, 89.0], [64.2, 89.0], [64.3, 89.0], [64.4, 89.0], [64.5, 89.0], [64.6, 89.0], [64.7, 89.0], [64.8, 89.0], [64.9, 89.0], [65.0, 89.0], [65.1, 89.0], [65.2, 89.0], [65.3, 89.0], [65.4, 89.0], [65.5, 89.0], [65.6, 89.0], [65.7, 89.0], [65.8, 89.0], [65.9, 89.0], [66.0, 89.0], [66.1, 89.0], [66.2, 89.0], [66.3, 89.0], [66.4, 89.0], [66.5, 89.0], [66.6, 89.0], [66.7, 89.0], [66.8, 89.0], [66.9, 89.0], [67.0, 89.0], [67.1, 89.0], [67.2, 89.0], [67.3, 89.0], [67.4, 89.0], [67.5, 89.0], [67.6, 89.0], [67.7, 89.0], [67.8, 89.0], [67.9, 89.0], [68.0, 89.0], [68.1, 89.0], [68.2, 89.0], [68.3, 89.0], [68.4, 89.0], [68.5, 89.0], [68.6, 89.0], [68.7, 89.0], [68.8, 89.0], [68.9, 89.0], [69.0, 89.0], [69.1, 89.0], [69.2, 89.0], [69.3, 89.0], [69.4, 89.0], [69.5, 89.0], [69.6, 89.0], [69.7, 89.0], [69.8, 89.0], [69.9, 89.0], [70.0, 89.0], [70.1, 89.0], [70.2, 89.0], [70.3, 89.0], [70.4, 89.0], [70.5, 89.0], [70.6, 89.0], [70.7, 89.0], [70.8, 89.0], [70.9, 89.0], [71.0, 89.0], [71.1, 89.0], [71.2, 89.0], [71.3, 89.0], [71.4, 89.0], [71.5, 89.0], [71.6, 89.0], [71.7, 89.0], [71.8, 89.0], [71.9, 89.0], [72.0, 89.0], [72.1, 89.0], [72.2, 89.0], [72.3, 89.0], [72.4, 89.0], [72.5, 89.0], [72.6, 89.0], [72.7, 89.0], [72.8, 89.0], [72.9, 89.0], [73.0, 90.0], [73.1, 90.0], [73.2, 90.0], [73.3, 90.0], [73.4, 90.0], [73.5, 90.0], [73.6, 90.0], [73.7, 90.0], [73.8, 90.0], [73.9, 90.0], [74.0, 90.0], [74.1, 90.0], [74.2, 90.0], [74.3, 90.0], [74.4, 90.0], [74.5, 90.0], [74.6, 90.0], [74.7, 90.0], [74.8, 90.0], [74.9, 90.0], [75.0, 90.0], [75.1, 90.0], [75.2, 90.0], [75.3, 90.0], [75.4, 90.0], [75.5, 90.0], [75.6, 90.0], [75.7, 90.0], [75.8, 90.0], [75.9, 90.0], [76.0, 90.0], [76.1, 90.0], [76.2, 90.0], [76.3, 90.0], [76.4, 90.0], [76.5, 90.0], [76.6, 90.0], [76.7, 90.0], [76.8, 90.0], [76.9, 90.0], [77.0, 90.0], [77.1, 90.0], [77.2, 90.0], [77.3, 90.0], [77.4, 90.0], [77.5, 90.0], [77.6, 90.0], [77.7, 90.0], [77.8, 90.0], [77.9, 90.0], [78.0, 90.0], [78.1, 90.0], [78.2, 90.0], [78.3, 90.0], [78.4, 90.0], [78.5, 90.0], [78.6, 90.0], [78.7, 90.0], [78.8, 90.0], [78.9, 90.0], [79.0, 90.0], [79.1, 90.0], [79.2, 90.0], [79.3, 90.0], [79.4, 90.0], [79.5, 90.0], [79.6, 90.0], [79.7, 90.0], [79.8, 90.0], [79.9, 90.0], [80.0, 90.0], [80.1, 90.0], [80.2, 91.0], [80.3, 91.0], [80.4, 91.0], [80.5, 91.0], [80.6, 91.0], [80.7, 91.0], [80.8, 91.0], [80.9, 91.0], [81.0, 91.0], [81.1, 91.0], [81.2, 91.0], [81.3, 91.0], [81.4, 91.0], [81.5, 91.0], [81.6, 91.0], [81.7, 91.0], [81.8, 91.0], [81.9, 91.0], [82.0, 91.0], [82.1, 91.0], [82.2, 91.0], [82.3, 91.0], [82.4, 91.0], [82.5, 91.0], [82.6, 91.0], [82.7, 91.0], [82.8, 91.0], [82.9, 91.0], [83.0, 91.0], [83.1, 91.0], [83.2, 91.0], [83.3, 91.0], [83.4, 91.0], [83.5, 91.0], [83.6, 91.0], [83.7, 91.0], [83.8, 91.0], [83.9, 91.0], [84.0, 91.0], [84.1, 91.0], [84.2, 91.0], [84.3, 92.0], [84.4, 92.0], [84.5, 92.0], [84.6, 92.0], [84.7, 92.0], [84.8, 92.0], [84.9, 92.0], [85.0, 92.0], [85.1, 92.0], [85.2, 92.0], [85.3, 92.0], [85.4, 92.0], [85.5, 92.0], [85.6, 92.0], [85.7, 92.0], [85.8, 92.0], [85.9, 92.0], [86.0, 92.0], [86.1, 92.0], [86.2, 92.0], [86.3, 92.0], [86.4, 92.0], [86.5, 92.0], [86.6, 92.0], [86.7, 92.0], [86.8, 92.0], [86.9, 92.0], [87.0, 92.0], [87.1, 92.0], [87.2, 92.0], [87.3, 92.0], [87.4, 92.0], [87.5, 92.0], [87.6, 92.0], [87.7, 92.0], [87.8, 92.0], [87.9, 92.0], [88.0, 92.0], [88.1, 92.0], [88.2, 92.0], [88.3, 93.0], [88.4, 93.0], [88.5, 93.0], [88.6, 93.0], [88.7, 93.0], [88.8, 93.0], [88.9, 93.0], [89.0, 93.0], [89.1, 93.0], [89.2, 93.0], [89.3, 93.0], [89.4, 93.0], [89.5, 93.0], [89.6, 93.0], [89.7, 93.0], [89.8, 93.0], [89.9, 93.0], [90.0, 93.0], [90.1, 93.0], [90.2, 94.0], [90.3, 94.0], [90.4, 94.0], [90.5, 94.0], [90.6, 94.0], [90.7, 94.0], [90.8, 94.0], [90.9, 94.0], [91.0, 94.0], [91.1, 94.0], [91.2, 94.0], [91.3, 94.0], [91.4, 94.0], [91.5, 94.0], [91.6, 95.0], [91.7, 95.0], [91.8, 95.0], [91.9, 95.0], [92.0, 95.0], [92.1, 95.0], [92.2, 95.0], [92.3, 95.0], [92.4, 95.0], [92.5, 95.0], [92.6, 96.0], [92.7, 96.0], [92.8, 96.0], [92.9, 96.0], [93.0, 96.0], [93.1, 96.0], [93.2, 96.0], [93.3, 96.0], [93.4, 96.0], [93.5, 96.0], [93.6, 96.0], [93.7, 96.0], [93.8, 97.0], [93.9, 97.0], [94.0, 97.0], [94.1, 97.0], [94.2, 97.0], [94.3, 97.0], [94.4, 97.0], [94.5, 97.0], [94.6, 97.0], [94.7, 97.0], [94.8, 98.0], [94.9, 98.0], [95.0, 98.0], [95.1, 98.0], [95.2, 98.0], [95.3, 98.0], [95.4, 98.0], [95.5, 98.0], [95.6, 99.0], [95.7, 99.0], [95.8, 99.0], [95.9, 100.0], [96.0, 100.0], [96.1, 100.0], [96.2, 102.0], [96.3, 102.0], [96.4, 102.0], [96.5, 102.0], [96.6, 102.0], [96.7, 102.0], [96.8, 102.0], [96.9, 102.0], [97.0, 102.0], [97.1, 102.0], [97.2, 102.0], [97.3, 103.0], [97.4, 103.0], [97.5, 103.0], [97.6, 104.0], [97.7, 105.0], [97.8, 105.0], [97.9, 106.0], [98.0, 107.0], [98.1, 107.0], [98.2, 108.0], [98.3, 108.0], [98.4, 108.0], [98.5, 108.0], [98.6, 111.0], [98.7, 112.0], [98.8, 117.0], [98.9, 124.0], [99.0, 129.0], [99.1, 228.0], [99.2, 230.0], [99.3, 234.0], [99.4, 236.0], [99.5, 237.0], [99.6, 247.0], [99.7, 250.0], [99.8, 250.0], [99.9, 254.0], [100.0, 254.0]], "isOverall": false, "label": "Delete_user", "isController": false}, {"data": [[0.0, 84.0], [0.1, 84.0], [0.2, 86.0], [0.3, 87.0], [0.4, 87.0], [0.5, 88.0], [0.6, 88.0], [0.7, 89.0], [0.8, 90.0], [0.9, 91.0], [1.0, 93.0], [1.1, 93.0], [1.2, 93.0], [1.3, 94.0], [1.4, 95.0], [1.5, 99.0], [1.6, 105.0], [1.7, 367.0], [1.8, 367.0], [1.9, 368.0], [2.0, 368.0], [2.1, 368.0], [2.2, 368.0], [2.3, 368.0], [2.4, 368.0], [2.5, 368.0], [2.6, 369.0], [2.7, 369.0], [2.8, 370.0], [2.9, 370.0], [3.0, 370.0], [3.1, 370.0], [3.2, 370.0], [3.3, 370.0], [3.4, 370.0], [3.5, 370.0], [3.6, 370.0], [3.7, 370.0], [3.8, 371.0], [3.9, 371.0], [4.0, 371.0], [4.1, 371.0], [4.2, 371.0], [4.3, 371.0], [4.4, 371.0], [4.5, 371.0], [4.6, 372.0], [4.7, 372.0], [4.8, 372.0], [4.9, 372.0], [5.0, 372.0], [5.1, 372.0], [5.2, 372.0], [5.3, 372.0], [5.4, 373.0], [5.5, 373.0], [5.6, 373.0], [5.7, 373.0], [5.8, 373.0], [5.9, 373.0], [6.0, 373.0], [6.1, 373.0], [6.2, 373.0], [6.3, 373.0], [6.4, 373.0], [6.5, 373.0], [6.6, 373.0], [6.7, 373.0], [6.8, 373.0], [6.9, 373.0], [7.0, 373.0], [7.1, 373.0], [7.2, 373.0], [7.3, 373.0], [7.4, 373.0], [7.5, 374.0], [7.6, 374.0], [7.7, 374.0], [7.8, 374.0], [7.9, 374.0], [8.0, 374.0], [8.1, 374.0], [8.2, 374.0], [8.3, 374.0], [8.4, 374.0], [8.5, 374.0], [8.6, 374.0], [8.7, 374.0], [8.8, 374.0], [8.9, 374.0], [9.0, 374.0], [9.1, 374.0], [9.2, 374.0], [9.3, 374.0], [9.4, 374.0], [9.5, 374.0], [9.6, 374.0], [9.7, 374.0], [9.8, 374.0], [9.9, 375.0], [10.0, 375.0], [10.1, 375.0], [10.2, 375.0], [10.3, 375.0], [10.4, 375.0], [10.5, 375.0], [10.6, 375.0], [10.7, 375.0], [10.8, 375.0], [10.9, 375.0], [11.0, 375.0], [11.1, 375.0], [11.2, 375.0], [11.3, 375.0], [11.4, 375.0], [11.5, 375.0], [11.6, 376.0], [11.7, 376.0], [11.8, 376.0], [11.9, 376.0], [12.0, 376.0], [12.1, 376.0], [12.2, 376.0], [12.3, 376.0], [12.4, 376.0], [12.5, 376.0], [12.6, 376.0], [12.7, 376.0], [12.8, 376.0], [12.9, 376.0], [13.0, 376.0], [13.1, 376.0], [13.2, 376.0], [13.3, 376.0], [13.4, 376.0], [13.5, 376.0], [13.6, 376.0], [13.7, 377.0], [13.8, 377.0], [13.9, 377.0], [14.0, 377.0], [14.1, 377.0], [14.2, 377.0], [14.3, 377.0], [14.4, 377.0], [14.5, 377.0], [14.6, 377.0], [14.7, 377.0], [14.8, 377.0], [14.9, 377.0], [15.0, 377.0], [15.1, 377.0], [15.2, 377.0], [15.3, 377.0], [15.4, 377.0], [15.5, 377.0], [15.6, 377.0], [15.7, 377.0], [15.8, 377.0], [15.9, 377.0], [16.0, 377.0], [16.1, 377.0], [16.2, 377.0], [16.3, 377.0], [16.4, 378.0], [16.5, 378.0], [16.6, 378.0], [16.7, 378.0], [16.8, 378.0], [16.9, 378.0], [17.0, 378.0], [17.1, 378.0], [17.2, 378.0], [17.3, 378.0], [17.4, 378.0], [17.5, 378.0], [17.6, 378.0], [17.7, 378.0], [17.8, 378.0], [17.9, 378.0], [18.0, 378.0], [18.1, 378.0], [18.2, 378.0], [18.3, 379.0], [18.4, 379.0], [18.5, 379.0], [18.6, 379.0], [18.7, 379.0], [18.8, 379.0], [18.9, 379.0], [19.0, 379.0], [19.1, 379.0], [19.2, 379.0], [19.3, 379.0], [19.4, 379.0], [19.5, 379.0], [19.6, 379.0], [19.7, 379.0], [19.8, 379.0], [19.9, 379.0], [20.0, 379.0], [20.1, 379.0], [20.2, 379.0], [20.3, 379.0], [20.4, 379.0], [20.5, 379.0], [20.6, 379.0], [20.7, 379.0], [20.8, 379.0], [20.9, 379.0], [21.0, 379.0], [21.1, 379.0], [21.2, 380.0], [21.3, 380.0], [21.4, 380.0], [21.5, 380.0], [21.6, 380.0], [21.7, 380.0], [21.8, 380.0], [21.9, 380.0], [22.0, 380.0], [22.1, 380.0], [22.2, 380.0], [22.3, 380.0], [22.4, 380.0], [22.5, 380.0], [22.6, 380.0], [22.7, 380.0], [22.8, 381.0], [22.9, 381.0], [23.0, 381.0], [23.1, 381.0], [23.2, 381.0], [23.3, 381.0], [23.4, 381.0], [23.5, 381.0], [23.6, 381.0], [23.7, 381.0], [23.8, 381.0], [23.9, 381.0], [24.0, 381.0], [24.1, 381.0], [24.2, 381.0], [24.3, 382.0], [24.4, 382.0], [24.5, 382.0], [24.6, 382.0], [24.7, 382.0], [24.8, 382.0], [24.9, 382.0], [25.0, 382.0], [25.1, 382.0], [25.2, 382.0], [25.3, 382.0], [25.4, 382.0], [25.5, 382.0], [25.6, 382.0], [25.7, 382.0], [25.8, 382.0], [25.9, 382.0], [26.0, 382.0], [26.1, 382.0], [26.2, 382.0], [26.3, 382.0], [26.4, 382.0], [26.5, 382.0], [26.6, 383.0], [26.7, 383.0], [26.8, 383.0], [26.9, 383.0], [27.0, 383.0], [27.1, 383.0], [27.2, 383.0], [27.3, 383.0], [27.4, 383.0], [27.5, 383.0], [27.6, 383.0], [27.7, 383.0], [27.8, 383.0], [27.9, 383.0], [28.0, 383.0], [28.1, 383.0], [28.2, 383.0], [28.3, 383.0], [28.4, 383.0], [28.5, 383.0], [28.6, 383.0], [28.7, 383.0], [28.8, 384.0], [28.9, 384.0], [29.0, 384.0], [29.1, 384.0], [29.2, 384.0], [29.3, 384.0], [29.4, 384.0], [29.5, 384.0], [29.6, 384.0], [29.7, 384.0], [29.8, 384.0], [29.9, 384.0], [30.0, 384.0], [30.1, 384.0], [30.2, 384.0], [30.3, 384.0], [30.4, 385.0], [30.5, 385.0], [30.6, 385.0], [30.7, 385.0], [30.8, 385.0], [30.9, 385.0], [31.0, 385.0], [31.1, 385.0], [31.2, 385.0], [31.3, 385.0], [31.4, 385.0], [31.5, 385.0], [31.6, 386.0], [31.7, 386.0], [31.8, 386.0], [31.9, 386.0], [32.0, 386.0], [32.1, 386.0], [32.2, 387.0], [32.3, 387.0], [32.4, 387.0], [32.5, 387.0], [32.6, 387.0], [32.7, 387.0], [32.8, 387.0], [32.9, 387.0], [33.0, 387.0], [33.1, 387.0], [33.2, 387.0], [33.3, 388.0], [33.4, 388.0], [33.5, 388.0], [33.6, 388.0], [33.7, 388.0], [33.8, 388.0], [33.9, 388.0], [34.0, 388.0], [34.1, 388.0], [34.2, 389.0], [34.3, 389.0], [34.4, 389.0], [34.5, 389.0], [34.6, 389.0], [34.7, 389.0], [34.8, 389.0], [34.9, 389.0], [35.0, 389.0], [35.1, 389.0], [35.2, 389.0], [35.3, 390.0], [35.4, 390.0], [35.5, 390.0], [35.6, 390.0], [35.7, 390.0], [35.8, 390.0], [35.9, 390.0], [36.0, 390.0], [36.1, 390.0], [36.2, 390.0], [36.3, 390.0], [36.4, 390.0], [36.5, 391.0], [36.6, 391.0], [36.7, 391.0], [36.8, 391.0], [36.9, 391.0], [37.0, 391.0], [37.1, 391.0], [37.2, 391.0], [37.3, 391.0], [37.4, 391.0], [37.5, 392.0], [37.6, 392.0], [37.7, 392.0], [37.8, 392.0], [37.9, 392.0], [38.0, 392.0], [38.1, 392.0], [38.2, 392.0], [38.3, 392.0], [38.4, 392.0], [38.5, 392.0], [38.6, 392.0], [38.7, 392.0], [38.8, 392.0], [38.9, 392.0], [39.0, 392.0], [39.1, 393.0], [39.2, 393.0], [39.3, 393.0], [39.4, 393.0], [39.5, 393.0], [39.6, 393.0], [39.7, 393.0], [39.8, 393.0], [39.9, 393.0], [40.0, 393.0], [40.1, 393.0], [40.2, 393.0], [40.3, 393.0], [40.4, 393.0], [40.5, 393.0], [40.6, 393.0], [40.7, 393.0], [40.8, 393.0], [40.9, 393.0], [41.0, 393.0], [41.1, 393.0], [41.2, 393.0], [41.3, 393.0], [41.4, 394.0], [41.5, 394.0], [41.6, 394.0], [41.7, 394.0], [41.8, 394.0], [41.9, 394.0], [42.0, 394.0], [42.1, 394.0], [42.2, 394.0], [42.3, 394.0], [42.4, 394.0], [42.5, 394.0], [42.6, 395.0], [42.7, 395.0], [42.8, 395.0], [42.9, 395.0], [43.0, 395.0], [43.1, 395.0], [43.2, 395.0], [43.3, 395.0], [43.4, 395.0], [43.5, 395.0], [43.6, 395.0], [43.7, 395.0], [43.8, 396.0], [43.9, 396.0], [44.0, 396.0], [44.1, 396.0], [44.2, 396.0], [44.3, 396.0], [44.4, 396.0], [44.5, 396.0], [44.6, 396.0], [44.7, 396.0], [44.8, 396.0], [44.9, 396.0], [45.0, 396.0], [45.1, 396.0], [45.2, 396.0], [45.3, 396.0], [45.4, 396.0], [45.5, 396.0], [45.6, 396.0], [45.7, 396.0], [45.8, 396.0], [45.9, 396.0], [46.0, 396.0], [46.1, 397.0], [46.2, 397.0], [46.3, 397.0], [46.4, 397.0], [46.5, 397.0], [46.6, 397.0], [46.7, 397.0], [46.8, 397.0], [46.9, 397.0], [47.0, 397.0], [47.1, 397.0], [47.2, 397.0], [47.3, 397.0], [47.4, 397.0], [47.5, 397.0], [47.6, 397.0], [47.7, 397.0], [47.8, 397.0], [47.9, 397.0], [48.0, 397.0], [48.1, 398.0], [48.2, 398.0], [48.3, 398.0], [48.4, 398.0], [48.5, 398.0], [48.6, 398.0], [48.7, 398.0], [48.8, 398.0], [48.9, 398.0], [49.0, 398.0], [49.1, 398.0], [49.2, 398.0], [49.3, 398.0], [49.4, 398.0], [49.5, 398.0], [49.6, 398.0], [49.7, 398.0], [49.8, 398.0], [49.9, 399.0], [50.0, 399.0], [50.1, 399.0], [50.2, 399.0], [50.3, 399.0], [50.4, 399.0], [50.5, 399.0], [50.6, 399.0], [50.7, 399.0], [50.8, 399.0], [50.9, 399.0], [51.0, 399.0], [51.1, 399.0], [51.2, 399.0], [51.3, 399.0], [51.4, 399.0], [51.5, 399.0], [51.6, 399.0], [51.7, 399.0], [51.8, 399.0], [51.9, 399.0], [52.0, 399.0], [52.1, 399.0], [52.2, 400.0], [52.3, 400.0], [52.4, 400.0], [52.5, 400.0], [52.6, 400.0], [52.7, 400.0], [52.8, 400.0], [52.9, 400.0], [53.0, 400.0], [53.1, 400.0], [53.2, 400.0], [53.3, 400.0], [53.4, 400.0], [53.5, 400.0], [53.6, 400.0], [53.7, 400.0], [53.8, 400.0], [53.9, 400.0], [54.0, 400.0], [54.1, 400.0], [54.2, 400.0], [54.3, 400.0], [54.4, 400.0], [54.5, 401.0], [54.6, 401.0], [54.7, 401.0], [54.8, 401.0], [54.9, 401.0], [55.0, 401.0], [55.1, 401.0], [55.2, 401.0], [55.3, 401.0], [55.4, 401.0], [55.5, 401.0], [55.6, 401.0], [55.7, 401.0], [55.8, 401.0], [55.9, 401.0], [56.0, 401.0], [56.1, 401.0], [56.2, 401.0], [56.3, 401.0], [56.4, 401.0], [56.5, 401.0], [56.6, 401.0], [56.7, 401.0], [56.8, 402.0], [56.9, 402.0], [57.0, 402.0], [57.1, 402.0], [57.2, 402.0], [57.3, 402.0], [57.4, 402.0], [57.5, 402.0], [57.6, 402.0], [57.7, 402.0], [57.8, 402.0], [57.9, 402.0], [58.0, 402.0], [58.1, 402.0], [58.2, 402.0], [58.3, 402.0], [58.4, 402.0], [58.5, 402.0], [58.6, 402.0], [58.7, 402.0], [58.8, 402.0], [58.9, 402.0], [59.0, 402.0], [59.1, 402.0], [59.2, 402.0], [59.3, 402.0], [59.4, 402.0], [59.5, 402.0], [59.6, 402.0], [59.7, 402.0], [59.8, 403.0], [59.9, 403.0], [60.0, 403.0], [60.1, 403.0], [60.2, 403.0], [60.3, 403.0], [60.4, 403.0], [60.5, 403.0], [60.6, 403.0], [60.7, 403.0], [60.8, 403.0], [60.9, 403.0], [61.0, 403.0], [61.1, 403.0], [61.2, 403.0], [61.3, 403.0], [61.4, 403.0], [61.5, 403.0], [61.6, 403.0], [61.7, 403.0], [61.8, 403.0], [61.9, 403.0], [62.0, 403.0], [62.1, 403.0], [62.2, 403.0], [62.3, 403.0], [62.4, 403.0], [62.5, 403.0], [62.6, 403.0], [62.7, 403.0], [62.8, 403.0], [62.9, 403.0], [63.0, 403.0], [63.1, 403.0], [63.2, 403.0], [63.3, 404.0], [63.4, 404.0], [63.5, 404.0], [63.6, 404.0], [63.7, 404.0], [63.8, 404.0], [63.9, 404.0], [64.0, 404.0], [64.1, 404.0], [64.2, 404.0], [64.3, 404.0], [64.4, 404.0], [64.5, 404.0], [64.6, 404.0], [64.7, 404.0], [64.8, 404.0], [64.9, 404.0], [65.0, 404.0], [65.1, 404.0], [65.2, 404.0], [65.3, 404.0], [65.4, 404.0], [65.5, 404.0], [65.6, 404.0], [65.7, 404.0], [65.8, 404.0], [65.9, 404.0], [66.0, 404.0], [66.1, 405.0], [66.2, 405.0], [66.3, 405.0], [66.4, 405.0], [66.5, 405.0], [66.6, 405.0], [66.7, 405.0], [66.8, 405.0], [66.9, 405.0], [67.0, 405.0], [67.1, 405.0], [67.2, 405.0], [67.3, 405.0], [67.4, 405.0], [67.5, 405.0], [67.6, 405.0], [67.7, 405.0], [67.8, 405.0], [67.9, 405.0], [68.0, 405.0], [68.1, 405.0], [68.2, 405.0], [68.3, 406.0], [68.4, 406.0], [68.5, 406.0], [68.6, 406.0], [68.7, 406.0], [68.8, 406.0], [68.9, 406.0], [69.0, 406.0], [69.1, 406.0], [69.2, 406.0], [69.3, 406.0], [69.4, 406.0], [69.5, 406.0], [69.6, 406.0], [69.7, 406.0], [69.8, 406.0], [69.9, 406.0], [70.0, 406.0], [70.1, 406.0], [70.2, 407.0], [70.3, 407.0], [70.4, 407.0], [70.5, 407.0], [70.6, 407.0], [70.7, 407.0], [70.8, 407.0], [70.9, 407.0], [71.0, 407.0], [71.1, 407.0], [71.2, 407.0], [71.3, 407.0], [71.4, 407.0], [71.5, 407.0], [71.6, 407.0], [71.7, 408.0], [71.8, 408.0], [71.9, 408.0], [72.0, 408.0], [72.1, 408.0], [72.2, 408.0], [72.3, 408.0], [72.4, 408.0], [72.5, 408.0], [72.6, 408.0], [72.7, 408.0], [72.8, 408.0], [72.9, 408.0], [73.0, 408.0], [73.1, 408.0], [73.2, 408.0], [73.3, 408.0], [73.4, 408.0], [73.5, 408.0], [73.6, 408.0], [73.7, 408.0], [73.8, 408.0], [73.9, 408.0], [74.0, 408.0], [74.1, 409.0], [74.2, 409.0], [74.3, 409.0], [74.4, 409.0], [74.5, 409.0], [74.6, 409.0], [74.7, 409.0], [74.8, 409.0], [74.9, 409.0], [75.0, 409.0], [75.1, 409.0], [75.2, 409.0], [75.3, 409.0], [75.4, 410.0], [75.5, 410.0], [75.6, 410.0], [75.7, 410.0], [75.8, 410.0], [75.9, 410.0], [76.0, 410.0], [76.1, 410.0], [76.2, 410.0], [76.3, 410.0], [76.4, 410.0], [76.5, 410.0], [76.6, 410.0], [76.7, 411.0], [76.8, 411.0], [76.9, 411.0], [77.0, 411.0], [77.1, 411.0], [77.2, 411.0], [77.3, 412.0], [77.4, 412.0], [77.5, 412.0], [77.6, 412.0], [77.7, 412.0], [77.8, 412.0], [77.9, 412.0], [78.0, 412.0], [78.1, 412.0], [78.2, 412.0], [78.3, 413.0], [78.4, 413.0], [78.5, 413.0], [78.6, 413.0], [78.7, 413.0], [78.8, 413.0], [78.9, 413.0], [79.0, 413.0], [79.1, 413.0], [79.2, 413.0], [79.3, 413.0], [79.4, 413.0], [79.5, 413.0], [79.6, 413.0], [79.7, 414.0], [79.8, 414.0], [79.9, 414.0], [80.0, 414.0], [80.1, 414.0], [80.2, 414.0], [80.3, 414.0], [80.4, 414.0], [80.5, 414.0], [80.6, 415.0], [80.7, 415.0], [80.8, 415.0], [80.9, 415.0], [81.0, 415.0], [81.1, 415.0], [81.2, 416.0], [81.3, 416.0], [81.4, 416.0], [81.5, 416.0], [81.6, 416.0], [81.7, 416.0], [81.8, 416.0], [81.9, 416.0], [82.0, 416.0], [82.1, 416.0], [82.2, 416.0], [82.3, 417.0], [82.4, 417.0], [82.5, 417.0], [82.6, 417.0], [82.7, 417.0], [82.8, 417.0], [82.9, 417.0], [83.0, 417.0], [83.1, 418.0], [83.2, 418.0], [83.3, 418.0], [83.4, 418.0], [83.5, 418.0], [83.6, 418.0], [83.7, 418.0], [83.8, 418.0], [83.9, 419.0], [84.0, 419.0], [84.1, 419.0], [84.2, 419.0], [84.3, 419.0], [84.4, 419.0], [84.5, 419.0], [84.6, 419.0], [84.7, 419.0], [84.8, 419.0], [84.9, 419.0], [85.0, 420.0], [85.1, 420.0], [85.2, 420.0], [85.3, 420.0], [85.4, 420.0], [85.5, 420.0], [85.6, 421.0], [85.7, 421.0], [85.8, 421.0], [85.9, 421.0], [86.0, 421.0], [86.1, 421.0], [86.2, 421.0], [86.3, 421.0], [86.4, 421.0], [86.5, 421.0], [86.6, 421.0], [86.7, 421.0], [86.8, 422.0], [86.9, 422.0], [87.0, 422.0], [87.1, 422.0], [87.2, 422.0], [87.3, 422.0], [87.4, 422.0], [87.5, 422.0], [87.6, 422.0], [87.7, 422.0], [87.8, 422.0], [87.9, 422.0], [88.0, 422.0], [88.1, 422.0], [88.2, 423.0], [88.3, 423.0], [88.4, 423.0], [88.5, 423.0], [88.6, 423.0], [88.7, 423.0], [88.8, 423.0], [88.9, 423.0], [89.0, 423.0], [89.1, 424.0], [89.2, 424.0], [89.3, 424.0], [89.4, 425.0], [89.5, 425.0], [89.6, 425.0], [89.7, 425.0], [89.8, 425.0], [89.9, 425.0], [90.0, 426.0], [90.1, 426.0], [90.2, 426.0], [90.3, 426.0], [90.4, 426.0], [90.5, 427.0], [90.6, 427.0], [90.7, 427.0], [90.8, 427.0], [90.9, 427.0], [91.0, 427.0], [91.1, 428.0], [91.2, 428.0], [91.3, 428.0], [91.4, 428.0], [91.5, 429.0], [91.6, 429.0], [91.7, 429.0], [91.8, 429.0], [91.9, 429.0], [92.0, 429.0], [92.1, 429.0], [92.2, 429.0], [92.3, 429.0], [92.4, 430.0], [92.5, 430.0], [92.6, 430.0], [92.7, 430.0], [92.8, 430.0], [92.9, 430.0], [93.0, 430.0], [93.1, 430.0], [93.2, 430.0], [93.3, 431.0], [93.4, 431.0], [93.5, 431.0], [93.6, 431.0], [93.7, 432.0], [93.8, 432.0], [93.9, 432.0], [94.0, 432.0], [94.1, 432.0], [94.2, 432.0], [94.3, 432.0], [94.4, 433.0], [94.5, 433.0], [94.6, 434.0], [94.7, 434.0], [94.8, 435.0], [94.9, 435.0], [95.0, 437.0], [95.1, 437.0], [95.2, 437.0], [95.3, 438.0], [95.4, 438.0], [95.5, 439.0], [95.6, 440.0], [95.7, 441.0], [95.8, 442.0], [95.9, 442.0], [96.0, 442.0], [96.1, 443.0], [96.2, 444.0], [96.3, 445.0], [96.4, 446.0], [96.5, 446.0], [96.6, 446.0], [96.7, 447.0], [96.8, 447.0], [96.9, 448.0], [97.0, 449.0], [97.1, 449.0], [97.2, 452.0], [97.3, 456.0], [97.4, 457.0], [97.5, 458.0], [97.6, 458.0], [97.7, 458.0], [97.8, 462.0], [97.9, 462.0], [98.0, 480.0], [98.1, 483.0], [98.2, 484.0], [98.3, 484.0], [98.4, 485.0], [98.5, 485.0], [98.6, 502.0], [98.7, 518.0], [98.8, 528.0], [98.9, 528.0], [99.0, 530.0], [99.1, 545.0], [99.2, 568.0], [99.3, 588.0], [99.4, 618.0], [99.5, 626.0], [99.6, 679.0], [99.7, 711.0], [99.8, 813.0], [99.9, 957.0], [100.0, 957.0]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[0.0, 364.0], [0.1, 364.0], [0.2, 364.0], [0.3, 364.0], [0.4, 364.0], [0.5, 364.0], [0.6, 364.0], [0.7, 365.0], [0.8, 365.0], [0.9, 365.0], [1.0, 365.0], [1.1, 365.0], [1.2, 365.0], [1.3, 365.0], [1.4, 366.0], [1.5, 366.0], [1.6, 366.0], [1.7, 366.0], [1.8, 366.0], [1.9, 366.0], [2.0, 367.0], [2.1, 367.0], [2.2, 367.0], [2.3, 367.0], [2.4, 367.0], [2.5, 367.0], [2.6, 367.0], [2.7, 368.0], [2.8, 368.0], [2.9, 368.0], [3.0, 368.0], [3.1, 368.0], [3.2, 368.0], [3.3, 368.0], [3.4, 368.0], [3.5, 368.0], [3.6, 368.0], [3.7, 368.0], [3.8, 368.0], [3.9, 368.0], [4.0, 369.0], [4.1, 369.0], [4.2, 369.0], [4.3, 369.0], [4.4, 369.0], [4.5, 369.0], [4.6, 369.0], [4.7, 369.0], [4.8, 369.0], [4.9, 369.0], [5.0, 369.0], [5.1, 369.0], [5.2, 369.0], [5.3, 370.0], [5.4, 370.0], [5.5, 370.0], [5.6, 370.0], [5.7, 370.0], [5.8, 370.0], [5.9, 370.0], [6.0, 370.0], [6.1, 370.0], [6.2, 370.0], [6.3, 370.0], [6.4, 370.0], [6.5, 370.0], [6.6, 370.0], [6.7, 371.0], [6.8, 371.0], [6.9, 371.0], [7.0, 371.0], [7.1, 371.0], [7.2, 371.0], [7.3, 371.0], [7.4, 371.0], [7.5, 371.0], [7.6, 371.0], [7.7, 371.0], [7.8, 371.0], [7.9, 371.0], [8.0, 371.0], [8.1, 371.0], [8.2, 371.0], [8.3, 371.0], [8.4, 371.0], [8.5, 371.0], [8.6, 371.0], [8.7, 371.0], [8.8, 371.0], [8.9, 371.0], [9.0, 371.0], [9.1, 371.0], [9.2, 371.0], [9.3, 371.0], [9.4, 371.0], [9.5, 371.0], [9.6, 371.0], [9.7, 371.0], [9.8, 371.0], [9.9, 371.0], [10.0, 372.0], [10.1, 372.0], [10.2, 372.0], [10.3, 372.0], [10.4, 372.0], [10.5, 372.0], [10.6, 373.0], [10.7, 373.0], [10.8, 373.0], [10.9, 373.0], [11.0, 373.0], [11.1, 373.0], [11.2, 373.0], [11.3, 373.0], [11.4, 373.0], [11.5, 373.0], [11.6, 373.0], [11.7, 373.0], [11.8, 373.0], [11.9, 373.0], [12.0, 375.0], [12.1, 375.0], [12.2, 375.0], [12.3, 375.0], [12.4, 375.0], [12.5, 375.0], [12.6, 375.0], [12.7, 375.0], [12.8, 375.0], [12.9, 375.0], [13.0, 375.0], [13.1, 375.0], [13.2, 375.0], [13.3, 375.0], [13.4, 375.0], [13.5, 375.0], [13.6, 375.0], [13.7, 375.0], [13.8, 375.0], [13.9, 375.0], [14.0, 375.0], [14.1, 375.0], [14.2, 375.0], [14.3, 375.0], [14.4, 375.0], [14.5, 375.0], [14.6, 377.0], [14.7, 377.0], [14.8, 377.0], [14.9, 377.0], [15.0, 377.0], [15.1, 377.0], [15.2, 377.0], [15.3, 377.0], [15.4, 377.0], [15.5, 377.0], [15.6, 377.0], [15.7, 377.0], [15.8, 377.0], [15.9, 377.0], [16.0, 377.0], [16.1, 377.0], [16.2, 377.0], [16.3, 377.0], [16.4, 377.0], [16.5, 377.0], [16.6, 379.0], [16.7, 379.0], [16.8, 379.0], [16.9, 379.0], [17.0, 379.0], [17.1, 379.0], [17.2, 379.0], [17.3, 379.0], [17.4, 379.0], [17.5, 379.0], [17.6, 379.0], [17.7, 379.0], [17.8, 379.0], [17.9, 379.0], [18.0, 379.0], [18.1, 379.0], [18.2, 379.0], [18.3, 379.0], [18.4, 379.0], [18.5, 379.0], [18.6, 379.0], [18.7, 379.0], [18.8, 379.0], [18.9, 379.0], [19.0, 379.0], [19.1, 379.0], [19.2, 379.0], [19.3, 380.0], [19.4, 380.0], [19.5, 380.0], [19.6, 380.0], [19.7, 380.0], [19.8, 380.0], [19.9, 380.0], [20.0, 380.0], [20.1, 380.0], [20.2, 380.0], [20.3, 380.0], [20.4, 380.0], [20.5, 380.0], [20.6, 380.0], [20.7, 380.0], [20.8, 380.0], [20.9, 380.0], [21.0, 380.0], [21.1, 380.0], [21.2, 381.0], [21.3, 381.0], [21.4, 381.0], [21.5, 381.0], [21.6, 381.0], [21.7, 381.0], [21.8, 381.0], [21.9, 382.0], [22.0, 382.0], [22.1, 382.0], [22.2, 382.0], [22.3, 382.0], [22.4, 382.0], [22.5, 382.0], [22.6, 382.0], [22.7, 382.0], [22.8, 382.0], [22.9, 382.0], [23.0, 382.0], [23.1, 382.0], [23.2, 382.0], [23.3, 382.0], [23.4, 382.0], [23.5, 382.0], [23.6, 382.0], [23.7, 382.0], [23.8, 382.0], [23.9, 383.0], [24.0, 383.0], [24.1, 383.0], [24.2, 383.0], [24.3, 383.0], [24.4, 383.0], [24.5, 383.0], [24.6, 383.0], [24.7, 383.0], [24.8, 383.0], [24.9, 383.0], [25.0, 383.0], [25.1, 383.0], [25.2, 383.0], [25.3, 383.0], [25.4, 383.0], [25.5, 383.0], [25.6, 383.0], [25.7, 383.0], [25.8, 383.0], [25.9, 383.0], [26.0, 383.0], [26.1, 383.0], [26.2, 383.0], [26.3, 383.0], [26.4, 383.0], [26.5, 383.0], [26.6, 383.0], [26.7, 383.0], [26.8, 383.0], [26.9, 383.0], [27.0, 383.0], [27.1, 383.0], [27.2, 383.0], [27.3, 383.0], [27.4, 383.0], [27.5, 383.0], [27.6, 383.0], [27.7, 383.0], [27.8, 383.0], [27.9, 384.0], [28.0, 384.0], [28.1, 384.0], [28.2, 384.0], [28.3, 384.0], [28.4, 384.0], [28.5, 384.0], [28.6, 384.0], [28.7, 384.0], [28.8, 384.0], [28.9, 384.0], [29.0, 384.0], [29.1, 384.0], [29.2, 384.0], [29.3, 384.0], [29.4, 384.0], [29.5, 384.0], [29.6, 384.0], [29.7, 384.0], [29.8, 384.0], [29.9, 385.0], [30.0, 385.0], [30.1, 385.0], [30.2, 385.0], [30.3, 385.0], [30.4, 385.0], [30.5, 386.0], [30.6, 386.0], [30.7, 386.0], [30.8, 386.0], [30.9, 386.0], [31.0, 386.0], [31.1, 386.0], [31.2, 386.0], [31.3, 386.0], [31.4, 386.0], [31.5, 386.0], [31.6, 386.0], [31.7, 386.0], [31.8, 386.0], [31.9, 386.0], [32.0, 386.0], [32.1, 386.0], [32.2, 386.0], [32.3, 386.0], [32.4, 386.0], [32.5, 387.0], [32.6, 387.0], [32.7, 387.0], [32.8, 387.0], [32.9, 387.0], [33.0, 387.0], [33.1, 387.0], [33.2, 387.0], [33.3, 387.0], [33.4, 387.0], [33.5, 387.0], [33.6, 387.0], [33.7, 387.0], [33.8, 387.0], [33.9, 387.0], [34.0, 387.0], [34.1, 387.0], [34.2, 387.0], [34.3, 387.0], [34.4, 387.0], [34.5, 388.0], [34.6, 388.0], [34.7, 388.0], [34.8, 388.0], [34.9, 388.0], [35.0, 388.0], [35.1, 389.0], [35.2, 389.0], [35.3, 389.0], [35.4, 389.0], [35.5, 389.0], [35.6, 389.0], [35.7, 389.0], [35.8, 389.0], [35.9, 389.0], [36.0, 389.0], [36.1, 389.0], [36.2, 389.0], [36.3, 389.0], [36.4, 389.0], [36.5, 390.0], [36.6, 390.0], [36.7, 390.0], [36.8, 390.0], [36.9, 390.0], [37.0, 390.0], [37.1, 390.0], [37.2, 390.0], [37.3, 390.0], [37.4, 390.0], [37.5, 390.0], [37.6, 390.0], [37.7, 390.0], [37.8, 390.0], [37.9, 390.0], [38.0, 390.0], [38.1, 390.0], [38.2, 390.0], [38.3, 390.0], [38.4, 390.0], [38.5, 391.0], [38.6, 391.0], [38.7, 391.0], [38.8, 391.0], [38.9, 391.0], [39.0, 391.0], [39.1, 391.0], [39.2, 391.0], [39.3, 391.0], [39.4, 391.0], [39.5, 391.0], [39.6, 391.0], [39.7, 391.0], [39.8, 392.0], [39.9, 392.0], [40.0, 392.0], [40.1, 392.0], [40.2, 392.0], [40.3, 392.0], [40.4, 392.0], [40.5, 392.0], [40.6, 392.0], [40.7, 392.0], [40.8, 392.0], [40.9, 392.0], [41.0, 392.0], [41.1, 393.0], [41.2, 393.0], [41.3, 393.0], [41.4, 393.0], [41.5, 393.0], [41.6, 393.0], [41.7, 393.0], [41.8, 393.0], [41.9, 393.0], [42.0, 393.0], [42.1, 393.0], [42.2, 393.0], [42.3, 393.0], [42.4, 393.0], [42.5, 393.0], [42.6, 393.0], [42.7, 393.0], [42.8, 393.0], [42.9, 393.0], [43.0, 393.0], [43.1, 394.0], [43.2, 394.0], [43.3, 394.0], [43.4, 394.0], [43.5, 394.0], [43.6, 394.0], [43.7, 394.0], [43.8, 394.0], [43.9, 394.0], [44.0, 394.0], [44.1, 394.0], [44.2, 394.0], [44.3, 394.0], [44.4, 395.0], [44.5, 395.0], [44.6, 395.0], [44.7, 395.0], [44.8, 395.0], [44.9, 395.0], [45.0, 395.0], [45.1, 395.0], [45.2, 395.0], [45.3, 395.0], [45.4, 395.0], [45.5, 395.0], [45.6, 395.0], [45.7, 395.0], [45.8, 395.0], [45.9, 395.0], [46.0, 395.0], [46.1, 395.0], [46.2, 395.0], [46.3, 395.0], [46.4, 397.0], [46.5, 397.0], [46.6, 397.0], [46.7, 397.0], [46.8, 397.0], [46.9, 397.0], [47.0, 397.0], [47.1, 397.0], [47.2, 397.0], [47.3, 397.0], [47.4, 397.0], [47.5, 397.0], [47.6, 397.0], [47.7, 397.0], [47.8, 397.0], [47.9, 397.0], [48.0, 397.0], [48.1, 397.0], [48.2, 397.0], [48.3, 397.0], [48.4, 398.0], [48.5, 398.0], [48.6, 398.0], [48.7, 398.0], [48.8, 398.0], [48.9, 398.0], [49.0, 398.0], [49.1, 399.0], [49.2, 399.0], [49.3, 399.0], [49.4, 399.0], [49.5, 399.0], [49.6, 399.0], [49.7, 399.0], [49.8, 399.0], [49.9, 399.0], [50.0, 399.0], [50.1, 399.0], [50.2, 399.0], [50.3, 399.0], [50.4, 399.0], [50.5, 399.0], [50.6, 399.0], [50.7, 399.0], [50.8, 399.0], [50.9, 399.0], [51.0, 399.0], [51.1, 399.0], [51.2, 399.0], [51.3, 399.0], [51.4, 399.0], [51.5, 399.0], [51.6, 399.0], [51.7, 400.0], [51.8, 400.0], [51.9, 400.0], [52.0, 400.0], [52.1, 400.0], [52.2, 400.0], [52.3, 400.0], [52.4, 400.0], [52.5, 400.0], [52.6, 400.0], [52.7, 400.0], [52.8, 400.0], [52.9, 400.0], [53.0, 400.0], [53.1, 400.0], [53.2, 400.0], [53.3, 400.0], [53.4, 400.0], [53.5, 400.0], [53.6, 400.0], [53.7, 401.0], [53.8, 401.0], [53.9, 401.0], [54.0, 401.0], [54.1, 401.0], [54.2, 401.0], [54.3, 401.0], [54.4, 401.0], [54.5, 401.0], [54.6, 401.0], [54.7, 401.0], [54.8, 401.0], [54.9, 401.0], [55.0, 401.0], [55.1, 401.0], [55.2, 401.0], [55.3, 401.0], [55.4, 401.0], [55.5, 401.0], [55.6, 401.0], [55.7, 402.0], [55.8, 402.0], [55.9, 402.0], [56.0, 402.0], [56.1, 402.0], [56.2, 402.0], [56.3, 402.0], [56.4, 402.0], [56.5, 402.0], [56.6, 402.0], [56.7, 402.0], [56.8, 402.0], [56.9, 402.0], [57.0, 402.0], [57.1, 402.0], [57.2, 402.0], [57.3, 402.0], [57.4, 402.0], [57.5, 402.0], [57.6, 402.0], [57.7, 402.0], [57.8, 402.0], [57.9, 402.0], [58.0, 402.0], [58.1, 402.0], [58.2, 402.0], [58.3, 402.0], [58.4, 402.0], [58.5, 402.0], [58.6, 402.0], [58.7, 402.0], [58.8, 402.0], [58.9, 402.0], [59.0, 403.0], [59.1, 403.0], [59.2, 403.0], [59.3, 403.0], [59.4, 403.0], [59.5, 403.0], [59.6, 403.0], [59.7, 403.0], [59.8, 403.0], [59.9, 403.0], [60.0, 403.0], [60.1, 403.0], [60.2, 403.0], [60.3, 403.0], [60.4, 403.0], [60.5, 403.0], [60.6, 403.0], [60.7, 403.0], [60.8, 403.0], [60.9, 403.0], [61.0, 404.0], [61.1, 404.0], [61.2, 404.0], [61.3, 404.0], [61.4, 404.0], [61.5, 404.0], [61.6, 404.0], [61.7, 404.0], [61.8, 404.0], [61.9, 404.0], [62.0, 404.0], [62.1, 404.0], [62.2, 404.0], [62.3, 405.0], [62.4, 405.0], [62.5, 405.0], [62.6, 405.0], [62.7, 405.0], [62.8, 405.0], [62.9, 405.0], [63.0, 405.0], [63.1, 405.0], [63.2, 405.0], [63.3, 405.0], [63.4, 405.0], [63.5, 405.0], [63.6, 405.0], [63.7, 405.0], [63.8, 405.0], [63.9, 405.0], [64.0, 405.0], [64.1, 405.0], [64.2, 405.0], [64.3, 405.0], [64.4, 405.0], [64.5, 405.0], [64.6, 405.0], [64.7, 405.0], [64.8, 405.0], [64.9, 405.0], [65.0, 406.0], [65.1, 406.0], [65.2, 406.0], [65.3, 406.0], [65.4, 406.0], [65.5, 406.0], [65.6, 406.0], [65.7, 406.0], [65.8, 406.0], [65.9, 406.0], [66.0, 406.0], [66.1, 406.0], [66.2, 406.0], [66.3, 406.0], [66.4, 406.0], [66.5, 406.0], [66.6, 406.0], [66.7, 406.0], [66.8, 406.0], [66.9, 406.0], [67.0, 406.0], [67.1, 406.0], [67.2, 406.0], [67.3, 406.0], [67.4, 406.0], [67.5, 406.0], [67.6, 406.0], [67.7, 406.0], [67.8, 406.0], [67.9, 406.0], [68.0, 406.0], [68.1, 406.0], [68.2, 406.0], [68.3, 406.0], [68.4, 406.0], [68.5, 406.0], [68.6, 406.0], [68.7, 406.0], [68.8, 406.0], [68.9, 406.0], [69.0, 406.0], [69.1, 406.0], [69.2, 406.0], [69.3, 406.0], [69.4, 406.0], [69.5, 406.0], [69.6, 407.0], [69.7, 407.0], [69.8, 407.0], [69.9, 407.0], [70.0, 407.0], [70.1, 407.0], [70.2, 407.0], [70.3, 407.0], [70.4, 407.0], [70.5, 407.0], [70.6, 407.0], [70.7, 407.0], [70.8, 407.0], [70.9, 407.0], [71.0, 407.0], [71.1, 407.0], [71.2, 407.0], [71.3, 407.0], [71.4, 407.0], [71.5, 407.0], [71.6, 407.0], [71.7, 407.0], [71.8, 407.0], [71.9, 407.0], [72.0, 407.0], [72.1, 407.0], [72.2, 407.0], [72.3, 407.0], [72.4, 407.0], [72.5, 407.0], [72.6, 407.0], [72.7, 407.0], [72.8, 407.0], [72.9, 408.0], [73.0, 408.0], [73.1, 408.0], [73.2, 408.0], [73.3, 408.0], [73.4, 408.0], [73.5, 408.0], [73.6, 408.0], [73.7, 408.0], [73.8, 408.0], [73.9, 408.0], [74.0, 408.0], [74.1, 408.0], [74.2, 409.0], [74.3, 409.0], [74.4, 409.0], [74.5, 409.0], [74.6, 409.0], [74.7, 409.0], [74.8, 409.0], [74.9, 409.0], [75.0, 409.0], [75.1, 409.0], [75.2, 409.0], [75.3, 409.0], [75.4, 409.0], [75.5, 410.0], [75.6, 410.0], [75.7, 410.0], [75.8, 410.0], [75.9, 410.0], [76.0, 410.0], [76.1, 410.0], [76.2, 410.0], [76.3, 410.0], [76.4, 410.0], [76.5, 410.0], [76.6, 410.0], [76.7, 410.0], [76.8, 410.0], [76.9, 412.0], [77.0, 412.0], [77.1, 412.0], [77.2, 412.0], [77.3, 412.0], [77.4, 412.0], [77.5, 412.0], [77.6, 412.0], [77.7, 412.0], [77.8, 412.0], [77.9, 412.0], [78.0, 412.0], [78.1, 412.0], [78.2, 413.0], [78.3, 413.0], [78.4, 413.0], [78.5, 413.0], [78.6, 413.0], [78.7, 413.0], [78.8, 413.0], [78.9, 414.0], [79.0, 414.0], [79.1, 414.0], [79.2, 414.0], [79.3, 414.0], [79.4, 414.0], [79.5, 414.0], [79.6, 414.0], [79.7, 414.0], [79.8, 414.0], [79.9, 414.0], [80.0, 414.0], [80.1, 414.0], [80.2, 415.0], [80.3, 415.0], [80.4, 415.0], [80.5, 415.0], [80.6, 415.0], [80.7, 415.0], [80.8, 415.0], [80.9, 415.0], [81.0, 415.0], [81.1, 415.0], [81.2, 415.0], [81.3, 415.0], [81.4, 415.0], [81.5, 415.0], [81.6, 415.0], [81.7, 415.0], [81.8, 415.0], [81.9, 415.0], [82.0, 415.0], [82.1, 415.0], [82.2, 415.0], [82.3, 415.0], [82.4, 415.0], [82.5, 415.0], [82.6, 415.0], [82.7, 415.0], [82.8, 415.0], [82.9, 415.0], [83.0, 415.0], [83.1, 415.0], [83.2, 415.0], [83.3, 415.0], [83.4, 415.0], [83.5, 416.0], [83.6, 416.0], [83.7, 416.0], [83.8, 416.0], [83.9, 416.0], [84.0, 416.0], [84.1, 416.0], [84.2, 417.0], [84.3, 417.0], [84.4, 417.0], [84.5, 417.0], [84.6, 417.0], [84.7, 417.0], [84.8, 417.0], [84.9, 417.0], [85.0, 417.0], [85.1, 417.0], [85.2, 417.0], [85.3, 417.0], [85.4, 417.0], [85.5, 418.0], [85.6, 418.0], [85.7, 418.0], [85.8, 418.0], [85.9, 418.0], [86.0, 418.0], [86.1, 418.0], [86.2, 418.0], [86.3, 418.0], [86.4, 418.0], [86.5, 418.0], [86.6, 418.0], [86.7, 418.0], [86.8, 419.0], [86.9, 419.0], [87.0, 419.0], [87.1, 419.0], [87.2, 419.0], [87.3, 419.0], [87.4, 419.0], [87.5, 420.0], [87.6, 420.0], [87.7, 420.0], [87.8, 420.0], [87.9, 420.0], [88.0, 420.0], [88.1, 421.0], [88.2, 421.0], [88.3, 421.0], [88.4, 421.0], [88.5, 421.0], [88.6, 421.0], [88.7, 421.0], [88.8, 422.0], [88.9, 422.0], [89.0, 422.0], [89.1, 422.0], [89.2, 422.0], [89.3, 422.0], [89.4, 422.0], [89.5, 422.0], [89.6, 422.0], [89.7, 422.0], [89.8, 422.0], [89.9, 422.0], [90.0, 422.0], [90.1, 424.0], [90.2, 424.0], [90.3, 424.0], [90.4, 424.0], [90.5, 424.0], [90.6, 424.0], [90.7, 424.0], [90.8, 425.0], [90.9, 425.0], [91.0, 425.0], [91.1, 425.0], [91.2, 425.0], [91.3, 425.0], [91.4, 426.0], [91.5, 426.0], [91.6, 426.0], [91.7, 426.0], [91.8, 426.0], [91.9, 426.0], [92.0, 426.0], [92.1, 427.0], [92.2, 427.0], [92.3, 427.0], [92.4, 427.0], [92.5, 427.0], [92.6, 427.0], [92.7, 427.0], [92.8, 428.0], [92.9, 428.0], [93.0, 428.0], [93.1, 428.0], [93.2, 428.0], [93.3, 428.0], [93.4, 430.0], [93.5, 430.0], [93.6, 430.0], [93.7, 430.0], [93.8, 430.0], [93.9, 430.0], [94.0, 430.0], [94.1, 432.0], [94.2, 432.0], [94.3, 432.0], [94.4, 432.0], [94.5, 432.0], [94.6, 432.0], [94.7, 432.0], [94.8, 432.0], [94.9, 432.0], [95.0, 432.0], [95.1, 432.0], [95.2, 432.0], [95.3, 432.0], [95.4, 432.0], [95.5, 432.0], [95.6, 432.0], [95.7, 432.0], [95.8, 432.0], [95.9, 432.0], [96.0, 432.0], [96.1, 436.0], [96.2, 436.0], [96.3, 436.0], [96.4, 436.0], [96.5, 436.0], [96.6, 436.0], [96.7, 436.0], [96.8, 436.0], [96.9, 436.0], [97.0, 436.0], [97.1, 436.0], [97.2, 436.0], [97.3, 436.0], [97.4, 442.0], [97.5, 442.0], [97.6, 442.0], [97.7, 442.0], [97.8, 442.0], [97.9, 442.0], [98.0, 442.0], [98.1, 455.0], [98.2, 455.0], [98.3, 455.0], [98.4, 455.0], [98.5, 455.0], [98.6, 455.0], [98.7, 456.0], [98.8, 456.0], [98.9, 456.0], [99.0, 456.0], [99.1, 456.0], [99.2, 456.0], [99.3, 456.0], [99.4, 489.0], [99.5, 489.0], [99.6, 489.0], [99.7, 489.0], [99.8, 489.0], [99.9, 489.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 80.0], [0.1, 84.0], [0.2, 88.0], [0.3, 89.0], [0.4, 89.0], [0.5, 105.0], [0.6, 177.0], [0.7, 185.0], [0.8, 237.0], [0.9, 247.0], [1.0, 263.0], [1.1, 368.0], [1.2, 370.0], [1.3, 372.0], [1.4, 375.0], [1.5, 375.0], [1.6, 376.0], [1.7, 381.0], [1.8, 382.0], [1.9, 382.0], [2.0, 383.0], [2.1, 384.0], [2.2, 385.0], [2.3, 386.0], [2.4, 387.0], [2.5, 388.0], [2.6, 389.0], [2.7, 390.0], [2.8, 390.0], [2.9, 393.0], [3.0, 394.0], [3.1, 395.0], [3.2, 397.0], [3.3, 398.0], [3.4, 399.0], [3.5, 399.0], [3.6, 401.0], [3.7, 401.0], [3.8, 402.0], [3.9, 402.0], [4.0, 403.0], [4.1, 404.0], [4.2, 405.0], [4.3, 405.0], [4.4, 405.0], [4.5, 406.0], [4.6, 407.0], [4.7, 407.0], [4.8, 407.0], [4.9, 408.0], [5.0, 409.0], [5.1, 410.0], [5.2, 411.0], [5.3, 412.0], [5.4, 412.0], [5.5, 414.0], [5.6, 416.0], [5.7, 417.0], [5.8, 419.0], [5.9, 419.0], [6.0, 421.0], [6.1, 422.0], [6.2, 422.0], [6.3, 425.0], [6.4, 426.0], [6.5, 427.0], [6.6, 428.0], [6.7, 429.0], [6.8, 431.0], [6.9, 434.0], [7.0, 437.0], [7.1, 440.0], [7.2, 448.0], [7.3, 451.0], [7.4, 451.0], [7.5, 452.0], [7.6, 452.0], [7.7, 453.0], [7.8, 456.0], [7.9, 458.0], [8.0, 458.0], [8.1, 458.0], [8.2, 459.0], [8.3, 460.0], [8.4, 461.0], [8.5, 462.0], [8.6, 463.0], [8.7, 463.0], [8.8, 464.0], [8.9, 464.0], [9.0, 466.0], [9.1, 466.0], [9.2, 466.0], [9.3, 467.0], [9.4, 468.0], [9.5, 468.0], [9.6, 471.0], [9.7, 472.0], [9.8, 473.0], [9.9, 473.0], [10.0, 474.0], [10.1, 475.0], [10.2, 477.0], [10.3, 477.0], [10.4, 479.0], [10.5, 480.0], [10.6, 481.0], [10.7, 482.0], [10.8, 484.0], [10.9, 484.0], [11.0, 485.0], [11.1, 486.0], [11.2, 486.0], [11.3, 487.0], [11.4, 487.0], [11.5, 489.0], [11.6, 489.0], [11.7, 490.0], [11.8, 490.0], [11.9, 491.0], [12.0, 491.0], [12.1, 491.0], [12.2, 492.0], [12.3, 492.0], [12.4, 493.0], [12.5, 493.0], [12.6, 494.0], [12.7, 494.0], [12.8, 494.0], [12.9, 495.0], [13.0, 495.0], [13.1, 495.0], [13.2, 496.0], [13.3, 496.0], [13.4, 497.0], [13.5, 499.0], [13.6, 500.0], [13.7, 500.0], [13.8, 501.0], [13.9, 502.0], [14.0, 502.0], [14.1, 502.0], [14.2, 502.0], [14.3, 503.0], [14.4, 504.0], [14.5, 505.0], [14.6, 506.0], [14.7, 507.0], [14.8, 508.0], [14.9, 510.0], [15.0, 511.0], [15.1, 512.0], [15.2, 512.0], [15.3, 514.0], [15.4, 515.0], [15.5, 516.0], [15.6, 520.0], [15.7, 521.0], [15.8, 522.0], [15.9, 522.0], [16.0, 523.0], [16.1, 524.0], [16.2, 527.0], [16.3, 527.0], [16.4, 528.0], [16.5, 529.0], [16.6, 532.0], [16.7, 533.0], [16.8, 536.0], [16.9, 537.0], [17.0, 537.0], [17.1, 537.0], [17.2, 538.0], [17.3, 538.0], [17.4, 539.0], [17.5, 540.0], [17.6, 541.0], [17.7, 542.0], [17.8, 543.0], [17.9, 543.0], [18.0, 543.0], [18.1, 543.0], [18.2, 544.0], [18.3, 544.0], [18.4, 545.0], [18.5, 546.0], [18.6, 546.0], [18.7, 546.0], [18.8, 546.0], [18.9, 548.0], [19.0, 548.0], [19.1, 549.0], [19.2, 550.0], [19.3, 550.0], [19.4, 551.0], [19.5, 551.0], [19.6, 552.0], [19.7, 553.0], [19.8, 553.0], [19.9, 553.0], [20.0, 555.0], [20.1, 555.0], [20.2, 557.0], [20.3, 557.0], [20.4, 557.0], [20.5, 558.0], [20.6, 560.0], [20.7, 561.0], [20.8, 562.0], [20.9, 563.0], [21.0, 564.0], [21.1, 567.0], [21.2, 567.0], [21.3, 568.0], [21.4, 568.0], [21.5, 571.0], [21.6, 571.0], [21.7, 572.0], [21.8, 572.0], [21.9, 573.0], [22.0, 573.0], [22.1, 573.0], [22.2, 574.0], [22.3, 575.0], [22.4, 576.0], [22.5, 577.0], [22.6, 579.0], [22.7, 579.0], [22.8, 580.0], [22.9, 580.0], [23.0, 581.0], [23.1, 581.0], [23.2, 581.0], [23.3, 582.0], [23.4, 582.0], [23.5, 583.0], [23.6, 583.0], [23.7, 585.0], [23.8, 585.0], [23.9, 586.0], [24.0, 587.0], [24.1, 588.0], [24.2, 589.0], [24.3, 590.0], [24.4, 591.0], [24.5, 591.0], [24.6, 592.0], [24.7, 592.0], [24.8, 594.0], [24.9, 595.0], [25.0, 596.0], [25.1, 597.0], [25.2, 597.0], [25.3, 598.0], [25.4, 600.0], [25.5, 601.0], [25.6, 601.0], [25.7, 602.0], [25.8, 605.0], [25.9, 605.0], [26.0, 606.0], [26.1, 609.0], [26.2, 610.0], [26.3, 610.0], [26.4, 611.0], [26.5, 612.0], [26.6, 612.0], [26.7, 613.0], [26.8, 614.0], [26.9, 614.0], [27.0, 615.0], [27.1, 616.0], [27.2, 617.0], [27.3, 617.0], [27.4, 617.0], [27.5, 617.0], [27.6, 618.0], [27.7, 619.0], [27.8, 619.0], [27.9, 621.0], [28.0, 621.0], [28.1, 621.0], [28.2, 621.0], [28.3, 622.0], [28.4, 622.0], [28.5, 622.0], [28.6, 623.0], [28.7, 623.0], [28.8, 623.0], [28.9, 624.0], [29.0, 624.0], [29.1, 625.0], [29.2, 625.0], [29.3, 625.0], [29.4, 626.0], [29.5, 626.0], [29.6, 627.0], [29.7, 628.0], [29.8, 629.0], [29.9, 630.0], [30.0, 631.0], [30.1, 632.0], [30.2, 632.0], [30.3, 632.0], [30.4, 633.0], [30.5, 634.0], [30.6, 634.0], [30.7, 636.0], [30.8, 637.0], [30.9, 637.0], [31.0, 638.0], [31.1, 638.0], [31.2, 640.0], [31.3, 642.0], [31.4, 642.0], [31.5, 646.0], [31.6, 648.0], [31.7, 650.0], [31.8, 650.0], [31.9, 651.0], [32.0, 652.0], [32.1, 653.0], [32.2, 654.0], [32.3, 654.0], [32.4, 655.0], [32.5, 656.0], [32.6, 656.0], [32.7, 656.0], [32.8, 657.0], [32.9, 659.0], [33.0, 659.0], [33.1, 660.0], [33.2, 660.0], [33.3, 661.0], [33.4, 662.0], [33.5, 662.0], [33.6, 663.0], [33.7, 664.0], [33.8, 664.0], [33.9, 664.0], [34.0, 666.0], [34.1, 667.0], [34.2, 667.0], [34.3, 668.0], [34.4, 668.0], [34.5, 670.0], [34.6, 671.0], [34.7, 671.0], [34.8, 673.0], [34.9, 673.0], [35.0, 675.0], [35.1, 677.0], [35.2, 679.0], [35.3, 680.0], [35.4, 681.0], [35.5, 682.0], [35.6, 682.0], [35.7, 683.0], [35.8, 684.0], [35.9, 685.0], [36.0, 686.0], [36.1, 686.0], [36.2, 688.0], [36.3, 689.0], [36.4, 689.0], [36.5, 690.0], [36.6, 691.0], [36.7, 691.0], [36.8, 692.0], [36.9, 693.0], [37.0, 694.0], [37.1, 694.0], [37.2, 695.0], [37.3, 695.0], [37.4, 696.0], [37.5, 696.0], [37.6, 697.0], [37.7, 697.0], [37.8, 697.0], [37.9, 697.0], [38.0, 699.0], [38.1, 700.0], [38.2, 701.0], [38.3, 701.0], [38.4, 702.0], [38.5, 702.0], [38.6, 703.0], [38.7, 703.0], [38.8, 704.0], [38.9, 704.0], [39.0, 704.0], [39.1, 705.0], [39.2, 705.0], [39.3, 706.0], [39.4, 707.0], [39.5, 708.0], [39.6, 708.0], [39.7, 708.0], [39.8, 709.0], [39.9, 709.0], [40.0, 709.0], [40.1, 710.0], [40.2, 710.0], [40.3, 711.0], [40.4, 712.0], [40.5, 713.0], [40.6, 715.0], [40.7, 716.0], [40.8, 717.0], [40.9, 717.0], [41.0, 718.0], [41.1, 719.0], [41.2, 721.0], [41.3, 721.0], [41.4, 722.0], [41.5, 723.0], [41.6, 724.0], [41.7, 726.0], [41.8, 727.0], [41.9, 728.0], [42.0, 728.0], [42.1, 729.0], [42.2, 731.0], [42.3, 733.0], [42.4, 733.0], [42.5, 733.0], [42.6, 734.0], [42.7, 734.0], [42.8, 735.0], [42.9, 735.0], [43.0, 736.0], [43.1, 736.0], [43.2, 737.0], [43.3, 739.0], [43.4, 739.0], [43.5, 741.0], [43.6, 742.0], [43.7, 742.0], [43.8, 742.0], [43.9, 742.0], [44.0, 744.0], [44.1, 745.0], [44.2, 745.0], [44.3, 745.0], [44.4, 746.0], [44.5, 746.0], [44.6, 747.0], [44.7, 748.0], [44.8, 748.0], [44.9, 750.0], [45.0, 750.0], [45.1, 752.0], [45.2, 753.0], [45.3, 754.0], [45.4, 754.0], [45.5, 755.0], [45.6, 755.0], [45.7, 755.0], [45.8, 756.0], [45.9, 757.0], [46.0, 757.0], [46.1, 758.0], [46.2, 758.0], [46.3, 759.0], [46.4, 759.0], [46.5, 760.0], [46.6, 761.0], [46.7, 762.0], [46.8, 762.0], [46.9, 764.0], [47.0, 764.0], [47.1, 765.0], [47.2, 766.0], [47.3, 767.0], [47.4, 768.0], [47.5, 769.0], [47.6, 770.0], [47.7, 770.0], [47.8, 771.0], [47.9, 772.0], [48.0, 772.0], [48.1, 773.0], [48.2, 774.0], [48.3, 774.0], [48.4, 774.0], [48.5, 775.0], [48.6, 775.0], [48.7, 775.0], [48.8, 776.0], [48.9, 776.0], [49.0, 776.0], [49.1, 777.0], [49.2, 778.0], [49.3, 779.0], [49.4, 780.0], [49.5, 780.0], [49.6, 780.0], [49.7, 780.0], [49.8, 781.0], [49.9, 782.0], [50.0, 783.0], [50.1, 783.0], [50.2, 784.0], [50.3, 785.0], [50.4, 786.0], [50.5, 787.0], [50.6, 787.0], [50.7, 790.0], [50.8, 792.0], [50.9, 793.0], [51.0, 794.0], [51.1, 796.0], [51.2, 796.0], [51.3, 796.0], [51.4, 797.0], [51.5, 799.0], [51.6, 800.0], [51.7, 800.0], [51.8, 801.0], [51.9, 801.0], [52.0, 801.0], [52.1, 802.0], [52.2, 804.0], [52.3, 804.0], [52.4, 805.0], [52.5, 807.0], [52.6, 807.0], [52.7, 808.0], [52.8, 808.0], [52.9, 810.0], [53.0, 810.0], [53.1, 810.0], [53.2, 812.0], [53.3, 812.0], [53.4, 812.0], [53.5, 813.0], [53.6, 813.0], [53.7, 814.0], [53.8, 815.0], [53.9, 815.0], [54.0, 816.0], [54.1, 816.0], [54.2, 817.0], [54.3, 817.0], [54.4, 818.0], [54.5, 819.0], [54.6, 821.0], [54.7, 821.0], [54.8, 823.0], [54.9, 823.0], [55.0, 823.0], [55.1, 825.0], [55.2, 825.0], [55.3, 825.0], [55.4, 826.0], [55.5, 827.0], [55.6, 827.0], [55.7, 827.0], [55.8, 827.0], [55.9, 828.0], [56.0, 828.0], [56.1, 828.0], [56.2, 831.0], [56.3, 832.0], [56.4, 832.0], [56.5, 833.0], [56.6, 833.0], [56.7, 834.0], [56.8, 835.0], [56.9, 836.0], [57.0, 836.0], [57.1, 836.0], [57.2, 837.0], [57.3, 838.0], [57.4, 838.0], [57.5, 839.0], [57.6, 840.0], [57.7, 840.0], [57.8, 841.0], [57.9, 842.0], [58.0, 842.0], [58.1, 842.0], [58.2, 843.0], [58.3, 843.0], [58.4, 844.0], [58.5, 844.0], [58.6, 844.0], [58.7, 845.0], [58.8, 845.0], [58.9, 846.0], [59.0, 847.0], [59.1, 847.0], [59.2, 848.0], [59.3, 848.0], [59.4, 849.0], [59.5, 849.0], [59.6, 850.0], [59.7, 851.0], [59.8, 851.0], [59.9, 851.0], [60.0, 853.0], [60.1, 854.0], [60.2, 854.0], [60.3, 855.0], [60.4, 856.0], [60.5, 856.0], [60.6, 857.0], [60.7, 857.0], [60.8, 857.0], [60.9, 858.0], [61.0, 859.0], [61.1, 860.0], [61.2, 861.0], [61.3, 862.0], [61.4, 863.0], [61.5, 864.0], [61.6, 865.0], [61.7, 865.0], [61.8, 867.0], [61.9, 867.0], [62.0, 868.0], [62.1, 869.0], [62.2, 870.0], [62.3, 870.0], [62.4, 872.0], [62.5, 873.0], [62.6, 873.0], [62.7, 875.0], [62.8, 876.0], [62.9, 876.0], [63.0, 877.0], [63.1, 878.0], [63.2, 879.0], [63.3, 879.0], [63.4, 879.0], [63.5, 880.0], [63.6, 880.0], [63.7, 881.0], [63.8, 882.0], [63.9, 882.0], [64.0, 882.0], [64.1, 883.0], [64.2, 884.0], [64.3, 884.0], [64.4, 886.0], [64.5, 887.0], [64.6, 887.0], [64.7, 888.0], [64.8, 888.0], [64.9, 890.0], [65.0, 891.0], [65.1, 893.0], [65.2, 893.0], [65.3, 894.0], [65.4, 895.0], [65.5, 895.0], [65.6, 896.0], [65.7, 896.0], [65.8, 896.0], [65.9, 896.0], [66.0, 897.0], [66.1, 897.0], [66.2, 898.0], [66.3, 899.0], [66.4, 899.0], [66.5, 899.0], [66.6, 899.0], [66.7, 899.0], [66.8, 900.0], [66.9, 900.0], [67.0, 900.0], [67.1, 901.0], [67.2, 902.0], [67.3, 902.0], [67.4, 903.0], [67.5, 903.0], [67.6, 904.0], [67.7, 905.0], [67.8, 905.0], [67.9, 905.0], [68.0, 906.0], [68.1, 906.0], [68.2, 907.0], [68.3, 907.0], [68.4, 908.0], [68.5, 908.0], [68.6, 908.0], [68.7, 908.0], [68.8, 910.0], [68.9, 911.0], [69.0, 912.0], [69.1, 912.0], [69.2, 913.0], [69.3, 913.0], [69.4, 913.0], [69.5, 914.0], [69.6, 915.0], [69.7, 916.0], [69.8, 916.0], [69.9, 916.0], [70.0, 916.0], [70.1, 918.0], [70.2, 918.0], [70.3, 919.0], [70.4, 919.0], [70.5, 919.0], [70.6, 919.0], [70.7, 919.0], [70.8, 919.0], [70.9, 920.0], [71.0, 920.0], [71.1, 920.0], [71.2, 921.0], [71.3, 922.0], [71.4, 923.0], [71.5, 924.0], [71.6, 925.0], [71.7, 925.0], [71.8, 925.0], [71.9, 926.0], [72.0, 926.0], [72.1, 926.0], [72.2, 927.0], [72.3, 927.0], [72.4, 927.0], [72.5, 928.0], [72.6, 928.0], [72.7, 928.0], [72.8, 930.0], [72.9, 930.0], [73.0, 930.0], [73.1, 932.0], [73.2, 933.0], [73.3, 933.0], [73.4, 935.0], [73.5, 935.0], [73.6, 935.0], [73.7, 935.0], [73.8, 936.0], [73.9, 936.0], [74.0, 938.0], [74.1, 940.0], [74.2, 940.0], [74.3, 941.0], [74.4, 942.0], [74.5, 942.0], [74.6, 943.0], [74.7, 944.0], [74.8, 947.0], [74.9, 947.0], [75.0, 948.0], [75.1, 948.0], [75.2, 950.0], [75.3, 953.0], [75.4, 953.0], [75.5, 954.0], [75.6, 955.0], [75.7, 956.0], [75.8, 958.0], [75.9, 960.0], [76.0, 961.0], [76.1, 963.0], [76.2, 963.0], [76.3, 963.0], [76.4, 964.0], [76.5, 964.0], [76.6, 965.0], [76.7, 966.0], [76.8, 966.0], [76.9, 966.0], [77.0, 967.0], [77.1, 969.0], [77.2, 971.0], [77.3, 971.0], [77.4, 971.0], [77.5, 973.0], [77.6, 973.0], [77.7, 975.0], [77.8, 975.0], [77.9, 975.0], [78.0, 975.0], [78.1, 976.0], [78.2, 976.0], [78.3, 976.0], [78.4, 977.0], [78.5, 978.0], [78.6, 979.0], [78.7, 980.0], [78.8, 980.0], [78.9, 980.0], [79.0, 982.0], [79.1, 982.0], [79.2, 983.0], [79.3, 984.0], [79.4, 984.0], [79.5, 986.0], [79.6, 987.0], [79.7, 987.0], [79.8, 988.0], [79.9, 988.0], [80.0, 989.0], [80.1, 989.0], [80.2, 989.0], [80.3, 990.0], [80.4, 990.0], [80.5, 990.0], [80.6, 990.0], [80.7, 990.0], [80.8, 991.0], [80.9, 991.0], [81.0, 991.0], [81.1, 992.0], [81.2, 992.0], [81.3, 992.0], [81.4, 993.0], [81.5, 993.0], [81.6, 993.0], [81.7, 994.0], [81.8, 994.0], [81.9, 994.0], [82.0, 995.0], [82.1, 995.0], [82.2, 997.0], [82.3, 998.0], [82.4, 999.0], [82.5, 999.0], [82.6, 1000.0], [82.7, 1000.0], [82.8, 1000.0], [82.9, 1001.0], [83.0, 1003.0], [83.1, 1003.0], [83.2, 1003.0], [83.3, 1004.0], [83.4, 1004.0], [83.5, 1004.0], [83.6, 1005.0], [83.7, 1005.0], [83.8, 1005.0], [83.9, 1005.0], [84.0, 1006.0], [84.1, 1007.0], [84.2, 1007.0], [84.3, 1008.0], [84.4, 1009.0], [84.5, 1010.0], [84.6, 1010.0], [84.7, 1010.0], [84.8, 1011.0], [84.9, 1012.0], [85.0, 1012.0], [85.1, 1014.0], [85.2, 1014.0], [85.3, 1015.0], [85.4, 1016.0], [85.5, 1016.0], [85.6, 1018.0], [85.7, 1020.0], [85.8, 1021.0], [85.9, 1021.0], [86.0, 1022.0], [86.1, 1022.0], [86.2, 1023.0], [86.3, 1023.0], [86.4, 1025.0], [86.5, 1026.0], [86.6, 1027.0], [86.7, 1028.0], [86.8, 1029.0], [86.9, 1031.0], [87.0, 1031.0], [87.1, 1034.0], [87.2, 1034.0], [87.3, 1035.0], [87.4, 1036.0], [87.5, 1038.0], [87.6, 1038.0], [87.7, 1039.0], [87.8, 1039.0], [87.9, 1040.0], [88.0, 1041.0], [88.1, 1041.0], [88.2, 1042.0], [88.3, 1043.0], [88.4, 1044.0], [88.5, 1045.0], [88.6, 1045.0], [88.7, 1045.0], [88.8, 1046.0], [88.9, 1047.0], [89.0, 1047.0], [89.1, 1047.0], [89.2, 1048.0], [89.3, 1049.0], [89.4, 1050.0], [89.5, 1051.0], [89.6, 1052.0], [89.7, 1053.0], [89.8, 1053.0], [89.9, 1054.0], [90.0, 1054.0], [90.1, 1057.0], [90.2, 1058.0], [90.3, 1058.0], [90.4, 1060.0], [90.5, 1060.0], [90.6, 1061.0], [90.7, 1061.0], [90.8, 1061.0], [90.9, 1062.0], [91.0, 1063.0], [91.1, 1063.0], [91.2, 1064.0], [91.3, 1064.0], [91.4, 1065.0], [91.5, 1065.0], [91.6, 1066.0], [91.7, 1066.0], [91.8, 1068.0], [91.9, 1068.0], [92.0, 1068.0], [92.1, 1069.0], [92.2, 1070.0], [92.3, 1071.0], [92.4, 1071.0], [92.5, 1071.0], [92.6, 1072.0], [92.7, 1073.0], [92.8, 1073.0], [92.9, 1074.0], [93.0, 1075.0], [93.1, 1076.0], [93.2, 1076.0], [93.3, 1077.0], [93.4, 1077.0], [93.5, 1078.0], [93.6, 1078.0], [93.7, 1078.0], [93.8, 1079.0], [93.9, 1079.0], [94.0, 1080.0], [94.1, 1083.0], [94.2, 1083.0], [94.3, 1085.0], [94.4, 1087.0], [94.5, 1088.0], [94.6, 1089.0], [94.7, 1090.0], [94.8, 1091.0], [94.9, 1091.0], [95.0, 1091.0], [95.1, 1092.0], [95.2, 1094.0], [95.3, 1095.0], [95.4, 1096.0], [95.5, 1099.0], [95.6, 1100.0], [95.7, 1101.0], [95.8, 1104.0], [95.9, 1105.0], [96.0, 1105.0], [96.1, 1106.0], [96.2, 1107.0], [96.3, 1112.0], [96.4, 1115.0], [96.5, 1116.0], [96.6, 1116.0], [96.7, 1120.0], [96.8, 1121.0], [96.9, 1123.0], [97.0, 1125.0], [97.1, 1125.0], [97.2, 1126.0], [97.3, 1127.0], [97.4, 1130.0], [97.5, 1133.0], [97.6, 1134.0], [97.7, 1134.0], [97.8, 1137.0], [97.9, 1137.0], [98.0, 1139.0], [98.1, 1139.0], [98.2, 1141.0], [98.3, 1141.0], [98.4, 1147.0], [98.5, 1149.0], [98.6, 1158.0], [98.7, 1170.0], [98.8, 1175.0], [98.9, 1176.0], [99.0, 1197.0], [99.1, 1203.0], [99.2, 1251.0], [99.3, 1267.0], [99.4, 1289.0], [99.5, 1314.0], [99.6, 1349.0], [99.7, 1405.0], [99.8, 1486.0], [99.9, 1908.0], [100.0, 1990.0]], "isOverall": false, "label": "Get_all", "isController": false}, {"data": [[0.0, 77.0], [0.1, 78.0], [0.2, 78.0], [0.3, 79.0], [0.4, 80.0], [0.5, 81.0], [0.6, 81.0], [0.7, 82.0], [0.8, 83.0], [0.9, 84.0], [1.0, 85.0], [1.1, 85.0], [1.2, 86.0], [1.3, 87.0], [1.4, 88.0], [1.5, 90.0], [1.6, 97.0], [1.7, 360.0], [1.8, 361.0], [1.9, 362.0], [2.0, 362.0], [2.1, 363.0], [2.2, 363.0], [2.3, 363.0], [2.4, 363.0], [2.5, 364.0], [2.6, 364.0], [2.7, 364.0], [2.8, 365.0], [2.9, 365.0], [3.0, 365.0], [3.1, 365.0], [3.2, 365.0], [3.3, 365.0], [3.4, 366.0], [3.5, 366.0], [3.6, 366.0], [3.7, 366.0], [3.8, 366.0], [3.9, 366.0], [4.0, 366.0], [4.1, 366.0], [4.2, 366.0], [4.3, 366.0], [4.4, 366.0], [4.5, 366.0], [4.6, 367.0], [4.7, 367.0], [4.8, 367.0], [4.9, 367.0], [5.0, 367.0], [5.1, 367.0], [5.2, 367.0], [5.3, 367.0], [5.4, 367.0], [5.5, 367.0], [5.6, 367.0], [5.7, 367.0], [5.8, 368.0], [5.9, 368.0], [6.0, 368.0], [6.1, 368.0], [6.2, 368.0], [6.3, 368.0], [6.4, 368.0], [6.5, 368.0], [6.6, 368.0], [6.7, 368.0], [6.8, 368.0], [6.9, 368.0], [7.0, 368.0], [7.1, 369.0], [7.2, 369.0], [7.3, 369.0], [7.4, 369.0], [7.5, 369.0], [7.6, 369.0], [7.7, 369.0], [7.8, 369.0], [7.9, 369.0], [8.0, 369.0], [8.1, 369.0], [8.2, 369.0], [8.3, 369.0], [8.4, 369.0], [8.5, 369.0], [8.6, 369.0], [8.7, 370.0], [8.8, 370.0], [8.9, 370.0], [9.0, 370.0], [9.1, 370.0], [9.2, 370.0], [9.3, 370.0], [9.4, 370.0], [9.5, 370.0], [9.6, 370.0], [9.7, 370.0], [9.8, 370.0], [9.9, 370.0], [10.0, 370.0], [10.1, 370.0], [10.2, 370.0], [10.3, 370.0], [10.4, 371.0], [10.5, 371.0], [10.6, 371.0], [10.7, 371.0], [10.8, 371.0], [10.9, 371.0], [11.0, 371.0], [11.1, 371.0], [11.2, 371.0], [11.3, 371.0], [11.4, 371.0], [11.5, 371.0], [11.6, 371.0], [11.7, 371.0], [11.8, 371.0], [11.9, 371.0], [12.0, 371.0], [12.1, 371.0], [12.2, 371.0], [12.3, 371.0], [12.4, 371.0], [12.5, 371.0], [12.6, 371.0], [12.7, 372.0], [12.8, 372.0], [12.9, 372.0], [13.0, 372.0], [13.1, 372.0], [13.2, 372.0], [13.3, 372.0], [13.4, 372.0], [13.5, 372.0], [13.6, 372.0], [13.7, 372.0], [13.8, 372.0], [13.9, 372.0], [14.0, 372.0], [14.1, 372.0], [14.2, 372.0], [14.3, 372.0], [14.4, 372.0], [14.5, 372.0], [14.6, 372.0], [14.7, 372.0], [14.8, 372.0], [14.9, 372.0], [15.0, 372.0], [15.1, 372.0], [15.2, 373.0], [15.3, 373.0], [15.4, 373.0], [15.5, 373.0], [15.6, 373.0], [15.7, 373.0], [15.8, 373.0], [15.9, 373.0], [16.0, 373.0], [16.1, 373.0], [16.2, 373.0], [16.3, 373.0], [16.4, 373.0], [16.5, 373.0], [16.6, 373.0], [16.7, 373.0], [16.8, 373.0], [16.9, 373.0], [17.0, 374.0], [17.1, 374.0], [17.2, 374.0], [17.3, 374.0], [17.4, 374.0], [17.5, 374.0], [17.6, 374.0], [17.7, 374.0], [17.8, 374.0], [17.9, 374.0], [18.0, 374.0], [18.1, 374.0], [18.2, 374.0], [18.3, 374.0], [18.4, 374.0], [18.5, 374.0], [18.6, 374.0], [18.7, 374.0], [18.8, 374.0], [18.9, 374.0], [19.0, 374.0], [19.1, 375.0], [19.2, 375.0], [19.3, 375.0], [19.4, 375.0], [19.5, 375.0], [19.6, 375.0], [19.7, 375.0], [19.8, 375.0], [19.9, 375.0], [20.0, 375.0], [20.1, 375.0], [20.2, 375.0], [20.3, 375.0], [20.4, 375.0], [20.5, 375.0], [20.6, 375.0], [20.7, 375.0], [20.8, 375.0], [20.9, 375.0], [21.0, 375.0], [21.1, 375.0], [21.2, 375.0], [21.3, 376.0], [21.4, 376.0], [21.5, 376.0], [21.6, 376.0], [21.7, 376.0], [21.8, 376.0], [21.9, 376.0], [22.0, 376.0], [22.1, 376.0], [22.2, 376.0], [22.3, 376.0], [22.4, 376.0], [22.5, 376.0], [22.6, 376.0], [22.7, 376.0], [22.8, 376.0], [22.9, 376.0], [23.0, 376.0], [23.1, 376.0], [23.2, 376.0], [23.3, 376.0], [23.4, 376.0], [23.5, 377.0], [23.6, 377.0], [23.7, 377.0], [23.8, 377.0], [23.9, 377.0], [24.0, 377.0], [24.1, 377.0], [24.2, 377.0], [24.3, 377.0], [24.4, 377.0], [24.5, 377.0], [24.6, 377.0], [24.7, 377.0], [24.8, 377.0], [24.9, 377.0], [25.0, 377.0], [25.1, 377.0], [25.2, 378.0], [25.3, 378.0], [25.4, 378.0], [25.5, 378.0], [25.6, 378.0], [25.7, 378.0], [25.8, 378.0], [25.9, 378.0], [26.0, 378.0], [26.1, 378.0], [26.2, 378.0], [26.3, 378.0], [26.4, 378.0], [26.5, 378.0], [26.6, 378.0], [26.7, 378.0], [26.8, 378.0], [26.9, 378.0], [27.0, 378.0], [27.1, 379.0], [27.2, 379.0], [27.3, 379.0], [27.4, 379.0], [27.5, 379.0], [27.6, 379.0], [27.7, 379.0], [27.8, 379.0], [27.9, 379.0], [28.0, 379.0], [28.1, 379.0], [28.2, 379.0], [28.3, 379.0], [28.4, 379.0], [28.5, 379.0], [28.6, 379.0], [28.7, 380.0], [28.8, 380.0], [28.9, 380.0], [29.0, 380.0], [29.1, 380.0], [29.2, 380.0], [29.3, 380.0], [29.4, 380.0], [29.5, 380.0], [29.6, 380.0], [29.7, 380.0], [29.8, 380.0], [29.9, 380.0], [30.0, 380.0], [30.1, 380.0], [30.2, 380.0], [30.3, 381.0], [30.4, 381.0], [30.5, 381.0], [30.6, 381.0], [30.7, 381.0], [30.8, 381.0], [30.9, 381.0], [31.0, 381.0], [31.1, 381.0], [31.2, 381.0], [31.3, 381.0], [31.4, 381.0], [31.5, 381.0], [31.6, 381.0], [31.7, 382.0], [31.8, 382.0], [31.9, 382.0], [32.0, 382.0], [32.1, 382.0], [32.2, 382.0], [32.3, 382.0], [32.4, 382.0], [32.5, 382.0], [32.6, 382.0], [32.7, 383.0], [32.8, 383.0], [32.9, 383.0], [33.0, 383.0], [33.1, 383.0], [33.2, 383.0], [33.3, 383.0], [33.4, 383.0], [33.5, 383.0], [33.6, 383.0], [33.7, 383.0], [33.8, 383.0], [33.9, 384.0], [34.0, 384.0], [34.1, 384.0], [34.2, 384.0], [34.3, 384.0], [34.4, 384.0], [34.5, 384.0], [34.6, 384.0], [34.7, 384.0], [34.8, 384.0], [34.9, 385.0], [35.0, 385.0], [35.1, 385.0], [35.2, 385.0], [35.3, 385.0], [35.4, 385.0], [35.5, 385.0], [35.6, 385.0], [35.7, 385.0], [35.8, 385.0], [35.9, 385.0], [36.0, 386.0], [36.1, 386.0], [36.2, 386.0], [36.3, 386.0], [36.4, 386.0], [36.5, 386.0], [36.6, 386.0], [36.7, 386.0], [36.8, 386.0], [36.9, 386.0], [37.0, 386.0], [37.1, 386.0], [37.2, 386.0], [37.3, 386.0], [37.4, 387.0], [37.5, 387.0], [37.6, 387.0], [37.7, 387.0], [37.8, 387.0], [37.9, 387.0], [38.0, 387.0], [38.1, 387.0], [38.2, 387.0], [38.3, 387.0], [38.4, 388.0], [38.5, 388.0], [38.6, 388.0], [38.7, 388.0], [38.8, 388.0], [38.9, 388.0], [39.0, 388.0], [39.1, 388.0], [39.2, 388.0], [39.3, 388.0], [39.4, 388.0], [39.5, 388.0], [39.6, 388.0], [39.7, 389.0], [39.8, 389.0], [39.9, 389.0], [40.0, 389.0], [40.1, 389.0], [40.2, 389.0], [40.3, 389.0], [40.4, 389.0], [40.5, 389.0], [40.6, 389.0], [40.7, 389.0], [40.8, 389.0], [40.9, 389.0], [41.0, 389.0], [41.1, 390.0], [41.2, 390.0], [41.3, 390.0], [41.4, 390.0], [41.5, 390.0], [41.6, 390.0], [41.7, 390.0], [41.8, 390.0], [41.9, 390.0], [42.0, 390.0], [42.1, 390.0], [42.2, 390.0], [42.3, 390.0], [42.4, 390.0], [42.5, 390.0], [42.6, 390.0], [42.7, 390.0], [42.8, 390.0], [42.9, 391.0], [43.0, 391.0], [43.1, 391.0], [43.2, 391.0], [43.3, 391.0], [43.4, 391.0], [43.5, 391.0], [43.6, 391.0], [43.7, 391.0], [43.8, 391.0], [43.9, 391.0], [44.0, 391.0], [44.1, 391.0], [44.2, 391.0], [44.3, 391.0], [44.4, 391.0], [44.5, 391.0], [44.6, 391.0], [44.7, 391.0], [44.8, 392.0], [44.9, 392.0], [45.0, 392.0], [45.1, 392.0], [45.2, 392.0], [45.3, 392.0], [45.4, 392.0], [45.5, 392.0], [45.6, 392.0], [45.7, 392.0], [45.8, 392.0], [45.9, 392.0], [46.0, 392.0], [46.1, 392.0], [46.2, 392.0], [46.3, 392.0], [46.4, 392.0], [46.5, 392.0], [46.6, 392.0], [46.7, 392.0], [46.8, 392.0], [46.9, 392.0], [47.0, 392.0], [47.1, 393.0], [47.2, 393.0], [47.3, 393.0], [47.4, 393.0], [47.5, 393.0], [47.6, 393.0], [47.7, 393.0], [47.8, 393.0], [47.9, 393.0], [48.0, 393.0], [48.1, 393.0], [48.2, 393.0], [48.3, 393.0], [48.4, 393.0], [48.5, 393.0], [48.6, 393.0], [48.7, 393.0], [48.8, 393.0], [48.9, 393.0], [49.0, 393.0], [49.1, 393.0], [49.2, 393.0], [49.3, 393.0], [49.4, 393.0], [49.5, 394.0], [49.6, 394.0], [49.7, 394.0], [49.8, 394.0], [49.9, 394.0], [50.0, 394.0], [50.1, 394.0], [50.2, 394.0], [50.3, 394.0], [50.4, 394.0], [50.5, 394.0], [50.6, 394.0], [50.7, 394.0], [50.8, 394.0], [50.9, 394.0], [51.0, 394.0], [51.1, 394.0], [51.2, 394.0], [51.3, 394.0], [51.4, 394.0], [51.5, 394.0], [51.6, 394.0], [51.7, 395.0], [51.8, 395.0], [51.9, 395.0], [52.0, 395.0], [52.1, 395.0], [52.2, 395.0], [52.3, 395.0], [52.4, 395.0], [52.5, 395.0], [52.6, 395.0], [52.7, 395.0], [52.8, 395.0], [52.9, 395.0], [53.0, 395.0], [53.1, 395.0], [53.2, 395.0], [53.3, 395.0], [53.4, 395.0], [53.5, 395.0], [53.6, 395.0], [53.7, 395.0], [53.8, 395.0], [53.9, 395.0], [54.0, 395.0], [54.1, 395.0], [54.2, 395.0], [54.3, 396.0], [54.4, 396.0], [54.5, 396.0], [54.6, 396.0], [54.7, 396.0], [54.8, 396.0], [54.9, 396.0], [55.0, 396.0], [55.1, 396.0], [55.2, 396.0], [55.3, 396.0], [55.4, 396.0], [55.5, 396.0], [55.6, 396.0], [55.7, 396.0], [55.8, 396.0], [55.9, 396.0], [56.0, 396.0], [56.1, 396.0], [56.2, 396.0], [56.3, 396.0], [56.4, 396.0], [56.5, 396.0], [56.6, 396.0], [56.7, 396.0], [56.8, 396.0], [56.9, 396.0], [57.0, 397.0], [57.1, 397.0], [57.2, 397.0], [57.3, 397.0], [57.4, 397.0], [57.5, 397.0], [57.6, 397.0], [57.7, 397.0], [57.8, 397.0], [57.9, 397.0], [58.0, 397.0], [58.1, 397.0], [58.2, 397.0], [58.3, 397.0], [58.4, 397.0], [58.5, 397.0], [58.6, 397.0], [58.7, 397.0], [58.8, 397.0], [58.9, 397.0], [59.0, 397.0], [59.1, 397.0], [59.2, 397.0], [59.3, 397.0], [59.4, 397.0], [59.5, 397.0], [59.6, 398.0], [59.7, 398.0], [59.8, 398.0], [59.9, 398.0], [60.0, 398.0], [60.1, 398.0], [60.2, 398.0], [60.3, 398.0], [60.4, 398.0], [60.5, 398.0], [60.6, 398.0], [60.7, 398.0], [60.8, 398.0], [60.9, 398.0], [61.0, 398.0], [61.1, 398.0], [61.2, 398.0], [61.3, 398.0], [61.4, 398.0], [61.5, 398.0], [61.6, 398.0], [61.7, 398.0], [61.8, 398.0], [61.9, 398.0], [62.0, 398.0], [62.1, 398.0], [62.2, 398.0], [62.3, 398.0], [62.4, 399.0], [62.5, 399.0], [62.6, 399.0], [62.7, 399.0], [62.8, 399.0], [62.9, 399.0], [63.0, 399.0], [63.1, 399.0], [63.2, 399.0], [63.3, 399.0], [63.4, 399.0], [63.5, 399.0], [63.6, 399.0], [63.7, 399.0], [63.8, 399.0], [63.9, 399.0], [64.0, 399.0], [64.1, 399.0], [64.2, 399.0], [64.3, 399.0], [64.4, 399.0], [64.5, 399.0], [64.6, 399.0], [64.7, 399.0], [64.8, 400.0], [64.9, 400.0], [65.0, 400.0], [65.1, 400.0], [65.2, 400.0], [65.3, 400.0], [65.4, 400.0], [65.5, 400.0], [65.6, 400.0], [65.7, 400.0], [65.8, 400.0], [65.9, 400.0], [66.0, 400.0], [66.1, 400.0], [66.2, 400.0], [66.3, 400.0], [66.4, 400.0], [66.5, 400.0], [66.6, 400.0], [66.7, 400.0], [66.8, 400.0], [66.9, 401.0], [67.0, 401.0], [67.1, 401.0], [67.2, 401.0], [67.3, 401.0], [67.4, 401.0], [67.5, 401.0], [67.6, 401.0], [67.7, 401.0], [67.8, 401.0], [67.9, 401.0], [68.0, 401.0], [68.1, 401.0], [68.2, 401.0], [68.3, 401.0], [68.4, 401.0], [68.5, 401.0], [68.6, 401.0], [68.7, 402.0], [68.8, 402.0], [68.9, 402.0], [69.0, 402.0], [69.1, 402.0], [69.2, 402.0], [69.3, 402.0], [69.4, 402.0], [69.5, 402.0], [69.6, 402.0], [69.7, 402.0], [69.8, 402.0], [69.9, 402.0], [70.0, 402.0], [70.1, 402.0], [70.2, 403.0], [70.3, 403.0], [70.4, 403.0], [70.5, 403.0], [70.6, 403.0], [70.7, 403.0], [70.8, 403.0], [70.9, 403.0], [71.0, 403.0], [71.1, 403.0], [71.2, 403.0], [71.3, 403.0], [71.4, 403.0], [71.5, 403.0], [71.6, 403.0], [71.7, 403.0], [71.8, 403.0], [71.9, 404.0], [72.0, 404.0], [72.1, 404.0], [72.2, 404.0], [72.3, 404.0], [72.4, 404.0], [72.5, 404.0], [72.6, 404.0], [72.7, 404.0], [72.8, 404.0], [72.9, 404.0], [73.0, 404.0], [73.1, 404.0], [73.2, 404.0], [73.3, 404.0], [73.4, 404.0], [73.5, 405.0], [73.6, 405.0], [73.7, 405.0], [73.8, 405.0], [73.9, 405.0], [74.0, 405.0], [74.1, 405.0], [74.2, 405.0], [74.3, 405.0], [74.4, 405.0], [74.5, 405.0], [74.6, 405.0], [74.7, 405.0], [74.8, 405.0], [74.9, 406.0], [75.0, 406.0], [75.1, 406.0], [75.2, 406.0], [75.3, 406.0], [75.4, 406.0], [75.5, 406.0], [75.6, 406.0], [75.7, 406.0], [75.8, 406.0], [75.9, 406.0], [76.0, 406.0], [76.1, 407.0], [76.2, 407.0], [76.3, 407.0], [76.4, 407.0], [76.5, 407.0], [76.6, 407.0], [76.7, 407.0], [76.8, 407.0], [76.9, 407.0], [77.0, 407.0], [77.1, 407.0], [77.2, 408.0], [77.3, 408.0], [77.4, 408.0], [77.5, 408.0], [77.6, 408.0], [77.7, 408.0], [77.8, 408.0], [77.9, 408.0], [78.0, 409.0], [78.1, 409.0], [78.2, 409.0], [78.3, 409.0], [78.4, 409.0], [78.5, 409.0], [78.6, 409.0], [78.7, 409.0], [78.8, 410.0], [78.9, 410.0], [79.0, 410.0], [79.1, 410.0], [79.2, 410.0], [79.3, 410.0], [79.4, 410.0], [79.5, 410.0], [79.6, 410.0], [79.7, 411.0], [79.8, 411.0], [79.9, 411.0], [80.0, 411.0], [80.1, 411.0], [80.2, 411.0], [80.3, 411.0], [80.4, 412.0], [80.5, 412.0], [80.6, 412.0], [80.7, 412.0], [80.8, 412.0], [80.9, 412.0], [81.0, 412.0], [81.1, 412.0], [81.2, 413.0], [81.3, 413.0], [81.4, 413.0], [81.5, 413.0], [81.6, 413.0], [81.7, 413.0], [81.8, 413.0], [81.9, 413.0], [82.0, 413.0], [82.1, 413.0], [82.2, 414.0], [82.3, 414.0], [82.4, 414.0], [82.5, 414.0], [82.6, 414.0], [82.7, 414.0], [82.8, 414.0], [82.9, 415.0], [83.0, 415.0], [83.1, 415.0], [83.2, 415.0], [83.3, 415.0], [83.4, 415.0], [83.5, 415.0], [83.6, 415.0], [83.7, 415.0], [83.8, 415.0], [83.9, 416.0], [84.0, 416.0], [84.1, 416.0], [84.2, 416.0], [84.3, 416.0], [84.4, 416.0], [84.5, 416.0], [84.6, 416.0], [84.7, 417.0], [84.8, 417.0], [84.9, 417.0], [85.0, 417.0], [85.1, 417.0], [85.2, 417.0], [85.3, 417.0], [85.4, 418.0], [85.5, 418.0], [85.6, 418.0], [85.7, 418.0], [85.8, 418.0], [85.9, 418.0], [86.0, 418.0], [86.1, 418.0], [86.2, 418.0], [86.3, 418.0], [86.4, 418.0], [86.5, 419.0], [86.6, 419.0], [86.7, 419.0], [86.8, 419.0], [86.9, 419.0], [87.0, 419.0], [87.1, 419.0], [87.2, 420.0], [87.3, 420.0], [87.4, 420.0], [87.5, 420.0], [87.6, 420.0], [87.7, 420.0], [87.8, 420.0], [87.9, 420.0], [88.0, 421.0], [88.1, 421.0], [88.2, 421.0], [88.3, 421.0], [88.4, 421.0], [88.5, 421.0], [88.6, 421.0], [88.7, 421.0], [88.8, 421.0], [88.9, 422.0], [89.0, 422.0], [89.1, 422.0], [89.2, 422.0], [89.3, 422.0], [89.4, 422.0], [89.5, 422.0], [89.6, 422.0], [89.7, 423.0], [89.8, 423.0], [89.9, 423.0], [90.0, 423.0], [90.1, 423.0], [90.2, 423.0], [90.3, 423.0], [90.4, 423.0], [90.5, 424.0], [90.6, 424.0], [90.7, 424.0], [90.8, 424.0], [90.9, 424.0], [91.0, 424.0], [91.1, 425.0], [91.2, 425.0], [91.3, 425.0], [91.4, 425.0], [91.5, 425.0], [91.6, 425.0], [91.7, 425.0], [91.8, 425.0], [91.9, 425.0], [92.0, 426.0], [92.1, 426.0], [92.2, 426.0], [92.3, 426.0], [92.4, 427.0], [92.5, 427.0], [92.6, 427.0], [92.7, 427.0], [92.8, 427.0], [92.9, 427.0], [93.0, 427.0], [93.1, 428.0], [93.2, 428.0], [93.3, 428.0], [93.4, 428.0], [93.5, 428.0], [93.6, 429.0], [93.7, 429.0], [93.8, 430.0], [93.9, 430.0], [94.0, 430.0], [94.1, 430.0], [94.2, 430.0], [94.3, 431.0], [94.4, 431.0], [94.5, 431.0], [94.6, 431.0], [94.7, 432.0], [94.8, 432.0], [94.9, 432.0], [95.0, 433.0], [95.1, 433.0], [95.2, 434.0], [95.3, 434.0], [95.4, 434.0], [95.5, 435.0], [95.6, 435.0], [95.7, 436.0], [95.8, 437.0], [95.9, 437.0], [96.0, 438.0], [96.1, 438.0], [96.2, 439.0], [96.3, 439.0], [96.4, 440.0], [96.5, 441.0], [96.6, 442.0], [96.7, 443.0], [96.8, 443.0], [96.9, 444.0], [97.0, 445.0], [97.1, 446.0], [97.2, 447.0], [97.3, 449.0], [97.4, 450.0], [97.5, 451.0], [97.6, 452.0], [97.7, 454.0], [97.8, 458.0], [97.9, 460.0], [98.0, 463.0], [98.1, 464.0], [98.2, 466.0], [98.3, 469.0], [98.4, 473.0], [98.5, 480.0], [98.6, 483.0], [98.7, 489.0], [98.8, 492.0], [98.9, 498.0], [99.0, 509.0], [99.1, 519.0], [99.2, 536.0], [99.3, 550.0], [99.4, 568.0], [99.5, 579.0], [99.6, 592.0], [99.7, 622.0], [99.8, 658.0], [99.9, 754.0], [100.0, 75002.0]], "isOverall": false, "label": "Get_one", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 4037.0, "series": [{"data": [[0.0, 896.0], [100.0, 30.0], [200.0, 9.0]], "isOverall": false, "label": "Delete_user", "isController": false}, {"data": [[0.0, 14.0], [300.0, 462.0], [600.0, 3.0], [700.0, 1.0], [100.0, 1.0], [400.0, 424.0], [800.0, 1.0], [900.0, 1.0], [500.0, 7.0]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[300.0, 78.0], [400.0, 73.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 9.0], [600.0, 232.0], [700.0, 247.0], [800.0, 279.0], [200.0, 7.0], [900.0, 288.0], [1000.0, 237.0], [1100.0, 65.0], [300.0, 44.0], [1200.0, 7.0], [1300.0, 4.0], [1400.0, 3.0], [1500.0, 1.0], [100.0, 4.0], [400.0, 184.0], [1900.0, 2.0], [500.0, 215.0]], "isOverall": false, "label": "Get_all", "isController": false}, {"data": [[0.0, 104.0], [300.0, 4037.0], [600.0, 14.0], [75000.0, 1.0], [1300.0, 2.0], [700.0, 5.0], [1400.0, 1.0], [1500.0, 1.0], [400.0, 2187.0], [100.0, 1.0], [500.0, 46.0]], "isOverall": false, "label": "Get_one", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 75000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1 500ms"], [2, "Requests having \nresponse time > 1 500ms"], [3, "Requests in error"]], "maxY": 8569.0, "series": [{"data": [[0.0, 8569.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1653.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1 500ms", "isController": false}, {"data": [[2.0, 4.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1 500ms", "isController": false}, {"data": [[3.0, 1.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.69479468E12, "maxY": 105.0, "series": [{"data": [[1.69479522E12, 10.0], [1.69479552E12, 15.0], [1.69479558E12, 15.0], [1.69479492E12, 5.0], [1.69479498E12, 5.0625], [1.69479528E12, 10.032258064516128], [1.69479534E12, 14.64516129032258], [1.69479468E12, 1.0], [1.69479564E12, 14.428571428571429], [1.69479474E12, 4.657142857142857], [1.69479504E12, 9.603174603174605], [1.6947951E12, 10.0], [1.6947954E12, 15.0], [1.69479546E12, 15.0], [1.6947948E12, 5.0], [1.69479486E12, 5.0], [1.69479516E12, 10.0]], "isOverall": false, "label": "Create_10_perc", "isController": false}, {"data": [[1.69479522E12, 70.0], [1.69479552E12, 105.0], [1.69479558E12, 105.0], [1.69479492E12, 35.0], [1.69479498E12, 35.49107142857143], [1.69479528E12, 70.45558086560364], [1.69479534E12, 103.1491628614917], [1.69479468E12, 5.333333333333333], [1.69479564E12, 94.29347826086955], [1.69479474E12, 32.11111111111114], [1.69479504E12, 67.65324384787473], [1.6947951E12, 70.0], [1.6947954E12, 105.0], [1.69479546E12, 105.0], [1.6947948E12, 35.0], [1.69479486E12, 35.0], [1.69479516E12, 70.0]], "isOverall": false, "label": "Get_one_70_perc", "isController": false}, {"data": [[1.69479522E12, 20.0], [1.69479552E12, 30.0], [1.69479558E12, 30.0], [1.69479492E12, 10.0], [1.69479498E12, 10.156250000000002], [1.69479528E12, 20.048780487804873], [1.69479534E12, 29.312169312169313], [1.69479468E12, 1.5], [1.69479564E12, 27.82142857142857], [1.69479474E12, 9.176470588235293], [1.69479504E12, 19.2890625], [1.6947951E12, 20.0], [1.6947954E12, 30.0], [1.69479546E12, 30.0], [1.6947948E12, 10.0], [1.69479486E12, 10.0], [1.69479516E12, 20.0]], "isOverall": false, "label": "Get_all_20_perc", "isController": false}, {"data": [[1.6947957E12, 1.0], [1.69479576E12, 1.0], [1.69479564E12, 1.0]], "isOverall": false, "label": "tearDown Clean_user_after_test", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69479576E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 14400000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 78.0, "minX": 1.0, "maxY": 75002.0, "series": [{"data": [[1.0, 89.12085561497337]], "isOverall": false, "label": "Delete_user", "isController": false}, {"data": [[1.0, 89.12085561497337]], "isOverall": false, "label": "Delete_user-Aggregated", "isController": false}, {"data": [[41.0, 87.0], [50.0, 404.95862068965505], [52.0, 416.0], [59.0, 382.0], [61.0, 95.0], [62.0, 411.0], [70.0, 405.0], [71.0, 88.0], [72.0, 375.0], [81.0, 93.0], [86.0, 444.0], [91.0, 89.0], [96.0, 404.0], [100.0, 400.3024054982817], [111.0, 84.0], [121.0, 87.0], [122.0, 402.0], [124.0, 399.0], [126.0, 378.0], [131.0, 235.0], [132.0, 421.0], [133.0, 374.0], [136.0, 392.5], [141.0, 91.0], [145.0, 390.0], [150.0, 400.5100222717151], [11.0, 94.0], [21.0, 99.0], [31.0, 105.0]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[116.45404814004388, 397.0393873085339]], "isOverall": false, "label": "Create-Aggregated", "isController": false}, {"data": [[2.0, 489.0], [4.0, 442.0], [5.0, 383.0], [6.0, 377.0], [7.0, 401.0], [10.0, 415.0], [11.0, 400.3333333333333], [12.0, 399.0], [14.0, 422.0], [15.0, 414.0], [16.0, 405.0], [17.0, 379.0], [20.0, 383.0], [21.0, 395.0], [22.0, 401.0], [23.0, 416.0], [25.0, 404.5], [26.0, 406.0], [27.0, 404.0], [30.0, 404.0], [31.0, 429.3333333333333], [32.0, 387.0], [33.0, 379.0], [35.0, 396.0], [36.0, 407.0], [37.0, 390.0], [40.0, 407.0], [41.0, 394.6666666666667], [42.0, 408.0], [43.0, 406.0], [45.0, 395.5], [46.0, 375.0], [47.0, 432.0], [50.0, 404.25], [52.0, 409.0], [53.0, 381.0], [55.0, 421.0], [56.0, 387.0], [57.0, 395.0], [60.0, 414.0], [61.0, 385.3333333333333], [62.0, 400.0], [64.0, 410.0], [65.0, 380.0], [66.0, 402.0], [67.0, 372.0], [70.0, 385.0], [71.0, 390.0], [72.0, 399.0], [73.0, 405.0], [75.0, 380.0], [76.0, 383.0], [77.0, 390.0], [80.0, 410.0], [81.0, 409.3333333333333], [82.0, 414.0], [83.0, 408.0], [85.0, 398.5], [86.0, 384.0], [87.0, 392.0], [90.0, 377.0], [91.0, 384.6666666666667], [92.0, 426.0], [93.0, 375.0], [95.0, 390.5], [96.0, 425.0], [97.0, 368.0], [100.0, 389.5], [102.0, 427.0], [103.0, 402.0], [105.0, 419.0], [106.0, 403.0], [107.0, 389.0], [110.0, 383.0], [111.0, 431.3333333333333], [112.0, 391.0], [113.0, 394.0], [115.0, 414.0], [116.0, 417.0], [117.0, 379.0], [120.0, 386.0], [121.0, 393.6666666666667], [122.0, 415.0], [123.0, 405.0], [125.0, 395.0], [126.0, 365.0], [127.0, 371.0], [130.0, 418.0], [131.0, 398.3333333333333], [132.0, 406.0], [133.0, 373.0], [135.0, 375.5], [136.0, 383.0], [137.0, 364.0], [140.0, 367.0], [141.0, 380.0], [142.0, 370.0], [143.0, 388.0], [145.0, 400.0], [146.0, 399.0], [147.0, 418.0], [150.0, 392.75], [1.0, 424.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[76.55629139072848, 398.2582781456954]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[4.0, 1100.0], [6.0, 80.0], [11.0, 89.0], [16.0, 89.0], [21.0, 98.0], [26.0, 84.0], [31.0, 105.0], [34.0, 1104.0], [36.0, 89.0], [41.0, 89.0], [46.0, 87.0], [50.0, 466.97909407665503], [55.0, 507.0], [56.0, 183.0], [57.0, 496.0], [59.0, 466.0], [61.0, 185.0], [66.0, 342.0], [68.0, 494.0], [70.0, 486.0], [72.0, 233.0], [74.0, 572.0], [76.0, 249.0], [80.0, 571.0], [81.0, 568.0], [82.0, 263.0], [86.0, 275.0], [91.0, 543.0], [92.0, 237.0], [96.0, 244.0], [100.0, 662.5120274914088], [103.0, 905.0], [106.0, 811.5], [107.0, 779.0], [113.0, 502.0], [115.0, 798.0], [117.0, 685.0], [122.0, 804.0], [123.0, 525.0], [125.0, 847.0], [127.0, 501.0], [132.0, 794.0], [133.0, 502.0], [135.0, 799.0], [136.0, 771.0], [137.0, 685.6666666666666], [140.0, 747.0], [141.0, 791.5], [143.0, 494.0], [145.0, 834.0], [147.0, 501.0], [150.0, 958.340757238307], [1.0, 863.0]], "isOverall": false, "label": "Get_all", "isController": false}, {"data": [[116.3659737417941, 772.99124726477]], "isOverall": false, "label": "Get_all-Aggregated", "isController": false}, {"data": [[2.0, 369.0], [3.0, 240.0], [4.0, 93.0], [5.0, 236.5], [6.0, 81.0], [7.0, 85.0], [10.0, 87.0], [11.0, 85.0], [12.0, 87.0], [14.0, 88.0], [15.0, 81.0], [16.0, 85.0], [17.0, 81.0], [20.0, 79.0], [21.0, 234.0], [22.0, 86.0], [24.0, 81.0], [25.0, 86.0], [26.0, 85.0], [27.0, 85.0], [30.0, 87.0], [31.0, 90.0], [32.0, 235.0], [34.0, 81.0], [35.0, 85.0], [36.0, 85.0], [37.0, 236.0], [40.0, 81.0], [41.0, 84.0], [42.0, 95.0], [44.0, 81.0], [45.0, 82.0], [46.0, 84.0], [47.0, 91.0], [50.0, 407.80277502477674], [51.0, 431.0], [52.0, 303.25], [54.0, 81.0], [55.0, 85.0], [56.0, 300.3333333333333], [57.0, 79.0], [59.0, 396.0], [60.0, 231.0], [61.0, 231.5], [62.0, 242.0], [63.0, 378.0], [64.0, 87.0], [65.0, 83.0], [66.0, 90.0], [67.0, 78.0], [70.0, 320.5], [71.0, 295.3333333333333], [72.0, 84.0], [74.0, 240.5], [75.0, 301.6666666666667], [76.0, 341.6], [77.0, 285.0], [80.0, 290.3333333333333], [81.0, 83.0], [82.0, 288.0], [84.0, 242.0], [85.0, 81.0], [86.0, 286.3333333333333], [87.0, 78.0], [90.0, 83.0], [91.0, 285.6666666666667], [92.0, 88.0], [93.0, 418.0], [94.0, 78.0], [95.0, 253.5], [96.0, 233.5], [97.0, 301.0], [100.0, 395.7826515524888], [102.0, 288.0], [103.0, 417.5], [104.0, 293.6666666666667], [105.0, 233.5], [106.0, 349.8333333333333], [107.0, 338.4], [110.0, 356.2], [111.0, 107.0], [112.0, 331.75], [113.0, 424.5], [114.0, 241.5], [115.0, 80.0], [116.0, 283.6666666666667], [117.0, 80.0], [120.0, 251.0], [121.0, 288.3333333333333], [122.0, 323.0], [124.0, 83.0], [125.0, 82.0], [126.0, 270.6666666666667], [127.0, 305.5], [130.0, 337.2], [131.0, 328.5], [132.0, 254.0], [134.0, 258.5], [135.0, 283.6666666666667], [133.0, 375.0], [136.0, 235.5], [137.0, 78.0], [140.0, 290.6666666666667], [141.0, 235.0], [142.0, 327.0], [144.0, 80.0], [145.0, 315.25], [146.0, 312.75], [147.0, 309.0], [150.0, 394.6465352828991], [1.0, 75002.0]], "isOverall": false, "label": "Get_one", "isController": false}, {"data": [[116.30817315205518, 403.9748398187215]], "isOverall": false, "label": "Get_one-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 150.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 166.06666666666666, "minX": 1.69479468E12, "maxY": 436169.0, "series": [{"data": [[1.69479522E12, 128053.48333333334], [1.69479552E12, 395032.6], [1.69479558E12, 436169.0], [1.69479492E12, 22829.8], [1.69479498E12, 29007.65], [1.69479528E12, 151532.2], [1.69479534E12, 264954.51666666666], [1.69479468E12, 378.8], [1.69479564E12, 75821.73333333334], [1.69479474E12, 8630.516666666666], [1.6947957E12, 5554.616666666667], [1.69479504E12, 71475.95], [1.6947951E12, 90521.6], [1.6947954E12, 309432.75], [1.69479546E12, 350495.98333333334], [1.6947948E12, 12579.583333333334], [1.69479576E12, 1553.9666666666667], [1.69479486E12, 17617.066666666666], [1.69479516E12, 111361.51666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69479522E12, 6233.333333333333], [1.69479552E12, 9408.933333333332], [1.69479558E12, 9288.266666666666], [1.69479492E12, 3110.6666666666665], [1.69479498E12, 3291.9333333333334], [1.69479528E12, 6469.4], [1.69479534E12, 9620.966666666667], [1.69479468E12, 166.06666666666666], [1.69479564E12, 2159.6666666666665], [1.69479474E12, 3339.766666666667], [1.6947957E12, 6742.4], [1.69479504E12, 6475.766666666666], [1.6947951E12, 6312.533333333334], [1.6947954E12, 9417.2], [1.69479546E12, 9378.533333333333], [1.6947948E12, 3097.3333333333335], [1.69479576E12, 1886.2666666666667], [1.69479486E12, 3111.6], [1.69479516E12, 6260.933333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69479576E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 14400000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 84.5, "minX": 1.69479468E12, "maxY": 1200.1847826086957, "series": [{"data": [[1.6947957E12, 88.84226190476197], [1.69479576E12, 89.3510638297872], [1.69479564E12, 91.03999999999996]], "isOverall": false, "label": "Delete_user", "isController": false}, {"data": [[1.69479522E12, 400.9166666666667], [1.69479552E12, 396.17777777777775], [1.69479558E12, 397.86666666666656], [1.69479492E12, 407.5862068965517], [1.69479498E12, 405.38709677419365], [1.69479528E12, 397.5409836065573], [1.69479534E12, 389.5842696629214], [1.69479468E12, 94.0], [1.69479564E12, 391.49999999999994], [1.69479474E12, 365.87096774193543], [1.69479504E12, 380.01694915254234], [1.6947951E12, 403.4499999999998], [1.6947954E12, 409.8333333333333], [1.69479546E12, 398.83333333333326], [1.6947948E12, 401.6333333333333], [1.69479486E12, 404.9310344827586], [1.69479516E12, 399.13333333333344]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[1.69479474E12, 402.6923076923077], [1.69479504E12, 393.1538461538462], [1.69479498E12, 398.54545454545456], [1.69479528E12, 411.5454545454545], [1.69479534E12, 391.64102564102564], [1.69479468E12, 408.18181818181813], [1.69479564E12, 424.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.69479522E12, 716.6355932203389], [1.69479552E12, 1016.4301675977651], [1.69479558E12, 1065.2078651685397], [1.69479492E12, 533.25], [1.69479498E12, 501.46774193548373], [1.69479528E12, 751.5867768595041], [1.69479534E12, 805.5856353591166], [1.69479468E12, 84.5], [1.69479564E12, 1099.2068965517244], [1.69479474E12, 358.16666666666663], [1.69479504E12, 549.0833333333331], [1.6947951E12, 610.9916666666668], [1.6947954E12, 908.3425414364641], [1.69479546E12, 942.4022346368716], [1.6947948E12, 415.5689655172413], [1.69479486E12, 471.55932203389824], [1.69479516E12, 655.4380165289255]], "isOverall": false, "label": "Get_all", "isController": false}, {"data": [[1.69479522E12, 392.8564593301432], [1.69479552E12, 391.8621236133123], [1.69479558E12, 391.7354838709677], [1.69479492E12, 417.8181818181817], [1.69479498E12, 409.1527777777778], [1.69479528E12, 393.4849187935031], [1.69479534E12, 383.7571428571426], [1.69479468E12, 85.42857142857143], [1.69479564E12, 1200.1847826086957], [1.69479474E12, 355.1304347826087], [1.69479504E12, 374.36904761904776], [1.6947951E12, 398.311320754717], [1.6947954E12, 399.6095238095239], [1.69479546E12, 394.35987261146494], [1.6947948E12, 402.2884615384613], [1.69479486E12, 402.7333333333334], [1.69479516E12, 395.4832535885167]], "isOverall": false, "label": "Get_one", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69479576E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 14400000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 84.5, "minX": 1.69479468E12, "maxY": 526.7333333333335, "series": [{"data": [[1.6947957E12, 88.8125], [1.69479576E12, 89.32978723404258], [1.69479564E12, 91.03999999999996]], "isOverall": false, "label": "Delete_user", "isController": false}, {"data": [[1.69479522E12, 400.90000000000003], [1.69479552E12, 396.16666666666686], [1.69479558E12, 397.8444444444443], [1.69479492E12, 407.5517241379311], [1.69479498E12, 405.3225806451613], [1.69479528E12, 397.5081967213113], [1.69479534E12, 389.56179775280896], [1.69479468E12, 94.0], [1.69479564E12, 391.49999999999994], [1.69479474E12, 365.80645161290323], [1.69479504E12, 380.0], [1.6947951E12, 403.4499999999998], [1.6947954E12, 409.8333333333333], [1.69479546E12, 398.81111111111113], [1.6947948E12, 401.6333333333333], [1.69479486E12, 404.89655172413796], [1.69479516E12, 399.09999999999985]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[1.69479474E12, 402.51282051282055], [1.69479504E12, 393.12820512820514], [1.69479498E12, 398.45454545454544], [1.69479528E12, 411.5454545454545], [1.69479534E12, 391.61538461538464], [1.69479468E12, 407.5454545454545], [1.69479564E12, 424.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.69479522E12, 499.4661016949151], [1.69479552E12, 519.8379888268154], [1.69479558E12, 519.1123595505616], [1.69479492E12, 526.7333333333335], [1.69479498E12, 500.0645161290322], [1.69479528E12, 505.36363636363615], [1.69479534E12, 490.5193370165746], [1.69479468E12, 84.5], [1.69479564E12, 500.6551724137931], [1.69479474E12, 358.1333333333333], [1.69479504E12, 472.5750000000001], [1.6947951E12, 499.12499999999983], [1.6947954E12, 515.7624309392266], [1.69479546E12, 510.01117318435746], [1.6947948E12, 415.48275862068954], [1.69479486E12, 471.4237288135593], [1.69479516E12, 501.20661157024796]], "isOverall": false, "label": "Get_all", "isController": false}, {"data": [[1.69479522E12, 392.8325358851674], [1.69479552E12, 391.8510301109352], [1.69479558E12, 391.73225806451626], [1.69479492E12, 417.7990430622012], [1.69479498E12, 409.12499999999983], [1.69479528E12, 393.4733178654294], [1.69479534E12, 383.73968253968235], [1.69479468E12, 85.42857142857143], [1.69479564E12, 384.9456521739132], [1.69479474E12, 355.0531400966183], [1.69479504E12, 374.34047619047595], [1.6947951E12, 398.2735849056606], [1.6947954E12, 399.5936507936509], [1.69479546E12, 394.35350318471336], [1.6947948E12, 402.24038461538476], [1.69479486E12, 402.70000000000016], [1.69479516E12, 395.4712918660283]], "isOverall": false, "label": "Get_one", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69479576E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 14400000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.69479468E12, "maxY": 1118.0217391304348, "series": [{"data": [[1.6947957E12, 1.5952380952380945], [1.69479576E12, 1.7127659574468095], [1.69479564E12, 0.0]], "isOverall": false, "label": "Delete_user", "isController": false}, {"data": [[1.69479522E12, 311.7], [1.69479552E12, 307.1444444444445], [1.69479558E12, 309.49999999999983], [1.69479492E12, 318.51724137931024], [1.69479498E12, 313.0322580645161], [1.69479528E12, 309.2950819672131], [1.69479534E12, 299.5955056179775], [1.69479468E12, 0.0], [1.69479564E12, 304.8571428571429], [1.69479474E12, 276.5161290322581], [1.69479504E12, 291.4915254237287], [1.6947951E12, 314.1833333333333], [1.6947954E12, 319.2222222222222], [1.69479546E12, 310.3555555555555], [1.6947948E12, 312.8999999999999], [1.69479486E12, 314.3448275862069], [1.69479516E12, 309.79999999999995]], "isOverall": false, "label": "Create", "isController": false}, {"data": [[1.69479474E12, 317.0769230769231], [1.69479504E12, 308.2307692307693], [1.69479498E12, 312.8181818181818], [1.69479528E12, 320.72727272727263], [1.69479534E12, 307.6410256410256], [1.69479468E12, 320.09090909090907], [1.69479564E12, 337.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.69479522E12, 308.43220338983065], [1.69479552E12, 315.2122905027935], [1.69479558E12, 307.8764044943821], [1.69479492E12, 332.6166666666667], [1.69479498E12, 315.82258064516117], [1.69479528E12, 309.5867768595043], [1.69479534E12, 296.3204419889504], [1.69479468E12, 0.0], [1.69479564E12, 293.10344827586204], [1.69479474E12, 271.3333333333332], [1.69479504E12, 290.3999999999999], [1.6947951E12, 313.03333333333336], [1.6947954E12, 316.7348066298343], [1.69479546E12, 307.9162011173183], [1.6947948E12, 321.50000000000006], [1.69479486E12, 311.55932203389824], [1.69479516E12, 311.9421487603303]], "isOverall": false, "label": "Get_all", "isController": false}, {"data": [[1.69479522E12, 309.2822966507175], [1.69479552E12, 308.03011093502374], [1.69479558E12, 307.62580645161296], [1.69479492E12, 330.8086124401913], [1.69479498E12, 320.88425925925907], [1.69479528E12, 308.6218097447795], [1.69479534E12, 299.0507936507939], [1.69479468E12, 0.0], [1.69479564E12, 1118.0217391304348], [1.69479474E12, 270.3913043478261], [1.69479504E12, 290.66190476190457], [1.6947951E12, 313.33018867924534], [1.6947954E12, 314.4619047619047], [1.69479546E12, 310.00000000000017], [1.6947948E12, 317.3076923076923], [1.69479486E12, 316.9142857142857], [1.69479516E12, 311.27272727272697]], "isOverall": false, "label": "Get_one", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69479576E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 14400000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 77.0, "minX": 1.69479468E12, "maxY": 1990.0, "series": [{"data": [[1.69479522E12, 833.0], [1.69479552E12, 1990.0], [1.69479558E12, 1349.0], [1.69479492E12, 1526.0], [1.69479498E12, 1373.0], [1.69479528E12, 1096.0], [1.69479534E12, 990.0], [1.69479468E12, 489.0], [1.69479564E12, 1203.0], [1.69479474E12, 475.0], [1.6947957E12, 254.0], [1.69479504E12, 849.0], [1.6947951E12, 818.0], [1.6947954E12, 1908.0], [1.69479546E12, 1134.0], [1.6947948E12, 518.0], [1.69479576E12, 250.0], [1.69479486E12, 595.0], [1.69479516E12, 807.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69479522E12, 719.0], [1.69479552E12, 1001.0], [1.69479558E12, 1065.1], [1.69479492E12, 515.2], [1.69479498E12, 522.8000000000001], [1.69479528E12, 742.0], [1.69479534E12, 812.0], [1.69479468E12, 436.6], [1.69479564E12, 1076.4], [1.69479474E12, 422.0], [1.6947957E12, 93.0], [1.69479504E12, 565.2], [1.6947951E12, 600.0], [1.6947954E12, 887.0], [1.69479546E12, 928.0], [1.6947948E12, 434.6], [1.69479576E12, 92.1], [1.69479486E12, 489.1], [1.69479516E12, 654.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69479522E12, 785.03], [1.69479552E12, 1125.8700000000001], [1.69479558E12, 1147.77], [1.69479492E12, 1124.4399999999987], [1.69479498E12, 703.3200000000002], [1.69479528E12, 843.5], [1.69479534E12, 909.2000000000004], [1.69479468E12, 489.0], [1.69479564E12, 1175.2399999999998], [1.69479474E12, 452.72], [1.6947957E12, 228.53999999999996], [1.69479504E12, 615.0500000000001], [1.6947951E12, 757.7000000000012], [1.6947954E12, 1248.1000000000026], [1.69479546E12, 1049.02], [1.6947948E12, 473.1199999999999], [1.69479576E12, 247.32999999999996], [1.69479486E12, 571.0899999999999], [1.69479516E12, 713.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69479522E12, 746.0], [1.69479552E12, 1044.8999999999999], [1.69479558E12, 1091.55], [1.69479492E12, 552.9000000000002], [1.69479498E12, 576.0], [1.69479528E12, 778.5], [1.69479534E12, 843.0], [1.69479468E12, 484.29999999999995], [1.69479564E12, 1127.0], [1.69479474E12, 430.0], [1.6947957E12, 97.0], [1.69479504E12, 584.05], [1.6947951E12, 639.25], [1.6947954E12, 918.9], [1.69479546E12, 976.0], [1.6947948E12, 447.29999999999995], [1.69479576E12, 97.54999999999998], [1.69479486E12, 510.1], [1.69479516E12, 672.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69479522E12, 361.0], [1.69479552E12, 360.0], [1.69479558E12, 359.0], [1.69479492E12, 365.0], [1.69479498E12, 79.0], [1.69479528E12, 77.0], [1.69479534E12, 78.0], [1.69479468E12, 80.0], [1.69479564E12, 86.0], [1.69479474E12, 79.0], [1.6947957E12, 81.0], [1.69479504E12, 77.0], [1.6947951E12, 362.0], [1.6947954E12, 359.0], [1.69479546E12, 360.0], [1.6947948E12, 368.0], [1.69479576E12, 83.0], [1.69479486E12, 364.0], [1.69479516E12, 363.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69479522E12, 398.5], [1.69479552E12, 397.0], [1.69479558E12, 397.0], [1.69479492E12, 405.0], [1.69479498E12, 404.5], [1.69479528E12, 402.0], [1.69479534E12, 401.0], [1.69479468E12, 369.0], [1.69479564E12, 375.0], [1.69479474E12, 396.0], [1.6947957E12, 86.0], [1.69479504E12, 398.0], [1.6947951E12, 400.5], [1.6947954E12, 398.0], [1.69479546E12, 397.0], [1.6947948E12, 402.0], [1.69479576E12, 87.0], [1.69479486E12, 401.0], [1.69479516E12, 400.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69479576E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 14400000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 378.0, "minX": 1.0, "maxY": 75002.0, "series": [{"data": [[2.0, 398.0], [3.0, 408.0], [4.0, 400.0], [5.0, 402.0], [6.0, 403.0], [7.0, 403.0], [8.0, 398.0], [9.0, 398.0], [10.0, 395.0], [11.0, 378.0], [12.0, 385.5], [13.0, 398.0], [14.0, 398.0], [15.0, 399.0], [1.0, 398.0], [16.0, 398.0], [17.0, 397.0], [18.0, 398.0], [19.0, 398.0], [20.0, 397.0], [21.0, 390.0], [22.0, 396.0], [23.0, 401.0], [24.0, 388.5], [25.0, 524.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 75002.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 25.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 513.5, "series": [{"data": [[2.0, 397.5], [3.0, 408.0], [4.0, 400.0], [5.0, 402.0], [6.0, 403.0], [7.0, 403.0], [8.0, 398.0], [9.0, 398.0], [10.0, 395.0], [11.0, 378.0], [12.0, 385.5], [13.0, 398.0], [14.0, 398.0], [15.0, 399.0], [1.0, 398.0], [16.0, 398.0], [17.0, 396.5], [18.0, 398.0], [19.0, 397.5], [20.0, 396.0], [21.0, 390.0], [22.0, 396.0], [23.0, 400.0], [24.0, 388.5], [25.0, 513.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 25.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.38333333333333336, "minX": 1.69479468E12, "maxY": 15.6, "series": [{"data": [[1.69479522E12, 10.016666666666667], [1.69479552E12, 14.95], [1.69479558E12, 14.933333333333334], [1.69479492E12, 4.95], [1.69479498E12, 5.35], [1.69479528E12, 10.4], [1.69479534E12, 15.6], [1.69479468E12, 0.38333333333333336], [1.69479564E12, 3.316666666666667], [1.69479474E12, 5.583333333333333], [1.6947957E12, 11.2], [1.69479504E12, 10.666666666666666], [1.6947951E12, 9.983333333333333], [1.6947954E12, 15.05], [1.69479546E12, 14.966666666666667], [1.6947948E12, 4.966666666666667], [1.69479576E12, 3.1166666666666667], [1.69479486E12, 5.016666666666667], [1.69479516E12, 10.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69479576E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 14400000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69479468E12, "maxY": 12.633333333333333, "series": [{"data": [[1.69479522E12, 1.9666666666666666], [1.69479552E12, 2.9833333333333334], [1.69479558E12, 2.966666666666667], [1.69479492E12, 1.0], [1.69479498E12, 1.0333333333333334], [1.69479528E12, 2.0166666666666666], [1.69479534E12, 3.0166666666666666], [1.69479468E12, 0.03333333333333333], [1.69479564E12, 1.7333333333333334], [1.69479474E12, 1.0], [1.6947957E12, 11.2], [1.69479504E12, 2.0], [1.6947951E12, 2.0], [1.6947954E12, 3.0166666666666666], [1.69479546E12, 2.9833333333333334], [1.6947948E12, 0.9666666666666667], [1.69479576E12, 3.1333333333333333], [1.69479486E12, 0.9833333333333333], [1.69479516E12, 2.0166666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.69479522E12, 7.966666666666667], [1.69479552E12, 12.016666666666667], [1.69479558E12, 11.833333333333334], [1.69479492E12, 3.966666666666667], [1.69479498E12, 4.3], [1.69479528E12, 8.383333333333333], [1.69479534E12, 12.633333333333333], [1.69479468E12, 0.31666666666666665], [1.69479564E12, 1.7666666666666666], [1.69479474E12, 4.616666666666666], [1.69479504E12, 8.633333333333333], [1.6947951E12, 8.066666666666666], [1.6947954E12, 12.0], [1.69479546E12, 11.966666666666667], [1.6947948E12, 3.966666666666667], [1.69479486E12, 3.9833333333333334], [1.69479516E12, 7.966666666666667]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.69479564E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69479576E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 14400000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69479468E12, "maxY": 11.2, "series": [{"data": [[1.69479522E12, 1.0], [1.69479552E12, 1.5], [1.69479558E12, 1.5], [1.69479492E12, 0.48333333333333334], [1.69479498E12, 0.5166666666666667], [1.69479528E12, 1.0166666666666666], [1.69479534E12, 1.4833333333333334], [1.69479468E12, 0.016666666666666666], [1.69479564E12, 0.23333333333333334], [1.69479474E12, 0.5166666666666667], [1.69479504E12, 0.9833333333333333], [1.6947951E12, 1.0], [1.6947954E12, 1.5], [1.69479546E12, 1.5], [1.6947948E12, 0.5], [1.69479486E12, 0.48333333333333334], [1.69479516E12, 1.0]], "isOverall": false, "label": "Create-success", "isController": false}, {"data": [[1.69479564E12, 0.016666666666666666]], "isOverall": false, "label": "Get_one-failure", "isController": false}, {"data": [[1.6947957E12, 11.2], [1.69479576E12, 3.1333333333333333], [1.69479564E12, 1.25]], "isOverall": false, "label": "Delete_user-success", "isController": false}, {"data": [[1.69479522E12, 6.966666666666667], [1.69479552E12, 10.516666666666667], [1.69479558E12, 10.333333333333334], [1.69479492E12, 3.4833333333333334], [1.69479498E12, 3.6], [1.69479528E12, 7.183333333333334], [1.69479534E12, 10.5], [1.69479468E12, 0.11666666666666667], [1.69479564E12, 1.5166666666666666], [1.69479474E12, 3.45], [1.69479504E12, 7.0], [1.6947951E12, 7.066666666666666], [1.6947954E12, 10.5], [1.69479546E12, 10.466666666666667], [1.6947948E12, 3.466666666666667], [1.69479486E12, 3.5], [1.69479516E12, 6.966666666666667]], "isOverall": false, "label": "Get_one-success", "isController": false}, {"data": [[1.69479522E12, 1.9666666666666666], [1.69479552E12, 2.9833333333333334], [1.69479558E12, 2.966666666666667], [1.69479492E12, 1.0], [1.69479498E12, 1.0333333333333334], [1.69479528E12, 2.0166666666666666], [1.69479534E12, 3.0166666666666666], [1.69479468E12, 0.03333333333333333], [1.69479564E12, 0.48333333333333334], [1.69479474E12, 1.0], [1.69479504E12, 2.0], [1.6947951E12, 2.0], [1.6947954E12, 3.0166666666666666], [1.69479546E12, 2.9833333333333334], [1.6947948E12, 0.9666666666666667], [1.69479486E12, 0.9833333333333333], [1.69479516E12, 2.0166666666666666]], "isOverall": false, "label": "Get_all-success", "isController": false}, {"data": [[1.69479474E12, 0.65], [1.69479504E12, 0.65], [1.69479498E12, 0.18333333333333332], [1.69479528E12, 0.18333333333333332], [1.69479534E12, 0.65], [1.69479468E12, 0.18333333333333332], [1.69479564E12, 0.016666666666666666]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69479576E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 14400000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69479468E12, "maxY": 15.65, "series": [{"data": [[1.69479522E12, 9.933333333333334], [1.69479552E12, 15.0], [1.69479558E12, 14.8], [1.69479492E12, 4.966666666666667], [1.69479498E12, 5.333333333333333], [1.69479528E12, 10.4], [1.69479534E12, 15.65], [1.69479468E12, 0.35], [1.69479564E12, 3.5], [1.69479474E12, 5.616666666666666], [1.6947957E12, 11.2], [1.69479504E12, 10.633333333333333], [1.6947951E12, 10.066666666666666], [1.6947954E12, 15.016666666666667], [1.69479546E12, 14.95], [1.6947948E12, 4.933333333333334], [1.69479576E12, 3.1333333333333333], [1.69479486E12, 4.966666666666667], [1.69479516E12, 9.983333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.69479564E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69479576E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 14400000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

